          fun: -0.03901768424608281
    func_vals: array([-0.03113294, -0.02569224, -0.03511374, -0.03044694, -0.02517754,
       -0.03143016, -0.02959263, -0.03250097, -0.02802802, -0.0332243 ,
       -0.02535708, -0.03056838, -0.03189668, -0.02626575, -0.02600698,
       -0.026503  , -0.03215909, -0.03077303, -0.03491435, -0.03219179,
       -0.03311788, -0.02832655, -0.03703446, -0.03259233, -0.03313704,
       -0.03561634, -0.0214272 , -0.03311788, -0.0320822 , -0.03308496,
       -0.03311788, -0.02911819, -0.03308496, -0.03144341, -0.0367322 ,
       -0.03169746, -0.02609667, -0.03177553, -0.03611841, -0.03311788,
       -0.0320861 , -0.02894957, -0.02903749, -0.03311788, -0.03763396,
       -0.03311788, -0.03311788, -0.03130196, -0.03311788, -0.0321836 ,
       -0.03311788, -0.03180079, -0.03308496, -0.03557003, -0.02734313,
       -0.0340714 , -0.02161628, -0.03311788, -0.03551914, -0.03357382,
       -0.03311788, -0.03232124, -0.03901768, -0.03630195, -0.03103703,
       -0.02950874, -0.02584454, -0.03836277, -0.03202492, -0.03495581])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169)]
 random_state: RandomState(MT19937) at 0x10D73BC00
        space: Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize')])
        specs: {'args': {'func': <bound method Optimizer.evaluate_single of <__main__.Optimizer object at 0x11a6e98d0>>, 'dimensions': Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize')]), 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=589592169), 'n_calls': 70, 'n_random_starts': 20, 'acq_func': 'gp_hedge', 'acq_optimizer': 'auto', 'x0': None, 'y0': None, 'random_state': RandomState(MT19937) at 0x10D73BC00, 'verbose': True, 'callback': None, 'n_points': 10000, 'n_restarts_optimizer': 10, 'xi': 0.01, 'kappa': 1.96, 'n_jobs': -1}, 'function': 'base_minimize'}
            x: [6, 46, 'tversky', True, 1.8835880841431558, 0.481142300165854, 1.5213714818344097]
      x_iters: [[654, 434, 'dice', True, 1.3764641500163215, 1.6140794490143184, 0.36245525112780014], [501, 66, 'asymmetric', False, 0.022828930936071194, 0.2400089687503309, 1.489551512681462], [325, 21, 'dice', False, 0.4097885960054858, 1.6464400593064803, 0.031720773826415145], [773, 544, 'jaccard', True, 0.9767175663256071, 1.1287301834025867, 0.7227973806676039], [681, 581, 'asymmetric', False, 1.257445699592414, 0.3542301000536619, 1.0217580415939005], [461, 739, 'tversky', True, 1.9875455077858029, 1.37896299665961, 1.8328979747050647], [217, 656, 'cosine', True, 0.03837572239433241, 0.1000076109274213, 0.7404243080983802], [617, 240, 'dice', False, 0.7188564991379346, 0.3139499143872429, 0.730872865614736], [471, 919, 'cosine', True, 1.7675301060817172, 0.4948619098093118, 1.6958050955644357], [12, 473, 'dice', False, 0.2809865542073478, 1.4107289893024215, 0.03385608773486127], [652, 839, 'asymmetric', False, 1.0703315706840526, 1.951517852937137, 0.41426378175947065], [185, 834, 'asymmetric', True, 1.4137930814188182, 0.25620976696178405, 0.16621943844159828], [138, 444, 'dice', False, 1.0552720356958802, 1.2300387463956721, 1.1430632928233286], [365, 505, 'cosine', False, 0.3439005201365713, 1.338402947136909, 0.9441332369438364], [490, 614, 'asymmetric', False, 0.8622464072582767, 0.013648094745452258, 1.6036305138137779], [319, 780, 'asymmetric', False, 0.41838807490387053, 1.355958101038238, 0.7304700448668825], [223, 173, 'cosine', True, 1.2353064324153455, 1.317586540225909, 1.0326068876501415], [796, 406, 'dice', True, 1.3880895277254204, 0.7269459455707715, 1.162321898138733], [417, 59, 'tversky', True, 1.4127636929082183, 1.18980959887152, 0.815108283745607], [615, 310, 'jaccard', False, 1.8914061738119026, 1.1650947301227945, 1.5569746662819242], [5, 0, 'jaccard', True, 2.0, 0.0, 0.0], [96, 962, 'tversky', False, 0.007606046396883228, 0.10340965200503385, 0.08703253219918629], [25, 22, 'tversky', True, 0.22648939452815814, 1.664302349469134, 1.4561454798664908], [23, 1, 'dice', True, 1.771876404794547, 1.8893762665869878, 0.09856077316143733], [351, 10, 'tversky', False, 1.9796436238718698, 0.20005362488485084, 1.883791434571546], [59, 88, 'jaccard', True, 0.22442918518851301, 1.7039618289293559, 1.9772523137055216], [798, 0, 'tversky', True, 1.5960495318400392, 1.920650521102025, 0.29953809416768], [5, 0, 'jaccard', True, 2.0, 0.0, 2.0], [32, 958, 'jaccard', False, 1.9407556787278277, 1.9238690170173534, 1.9312014576864165], [5, 0, 'dice', True, 0.0, 2.0, 2.0], [5, 0, 'jaccard', True, 0.0, 0.0, 2.0], [18, 132, 'cosine', False, 1.7721343826297073, 1.9406453373453048, 1.6394000290633752], [5, 0, 'dice', True, 2.0, 0.0, 2.0], [57, 998, 'tversky', True, 0.049591491224790354, 1.9763393554398276, 0.023951100182255], [38, 13, 'jaccard', False, 1.9027972890627314, 0.07972032777403616, 0.120203099035783], [40, 953, 'dice', False, 1.9684415443123604, 0.004636941233279624, 0.568931479141212], [31, 108, 'asymmetric', True, 1.7031071370357256, 1.8787205148193409, 1.2213117875435582], [17, 988, 'dice', True, 0.19563260659870846, 0.502907112568198, 1.9253321802135013], [6, 33, 'tversky', False, 0.13678147387580666, 0.29425827101209806, 0.24496036476158728], [5, 0, 'jaccard', False, 0.0, 0.0, 2.0], [6, 928, 'jaccard', False, 1.868548758258551, 1.6137850146311663, 1.924439777639423], [788, 984, 'jaccard', True, 0.044570616393130764, 0.10633853862725887, 0.22562960501023338], [16, 2, 'cosine', False, 1.396837905055782, 0.7583543372867108, 0.06168993172126026], [5, 0, 'jaccard', True, 0.0, 0.0, 2.0], [10, 55, 'dice', False, 1.9861676597782638, 0.09345956275955226, 0.059044849159923155], [5, 0, 'jaccard', True, 2.0, 0.0, 0.0], [5, 0, 'jaccard', False, 2.0, 0.0, 0.0], [37, 947, 'tversky', True, 1.3570034816767393, 0.1729517496069737, 1.968230116371171], [5, 0, 'jaccard', False, 0.0, 0.0, 0.0], [11, 948, 'jaccard', True, 0.08576649149752892, 1.8315548219345907, 0.04607965723949015], [5, 0, 'jaccard', False, 2.0, 2.0, 2.0], [24, 965, 'tversky', False, 0.31867440014170484, 0.170607719887693, 1.9603006960567684], [5, 0, 'dice', True, 2.0, 0.0, 0.0], [771, 13, 'jaccard', False, 0.10094844410309903, 0.3172348291689147, 1.8064068775209623], [126, 42, 'cosine', False, 0.04425211456579126, 0.024136468361845693, 1.8832837910400706], [755, 74, 'dice', False, 1.8708629724588874, 0.08961163472321056, 1.7824581838136229], [793, 3, 'tversky', False, 0.3165978150555409, 1.9418302141541919, 0.15564234772217292], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [14, 2, 'tversky', False, 1.590470086915194, 0.7905930425481622, 1.3186729796934664], [797, 22, 'cosine', True, 1.9665731829345166, 1.7675789620290816, 0.28238429977870144], [5, 0, 'jaccard', True, 2.0, 2.0, 5.551115123125783e-17], [9, 361, 'tversky', True, 1.8658737637447957, 1.8164279627339472, 0.25243097355262406], [6, 46, 'tversky', True, 1.8835880841431558, 0.481142300165854, 1.5213714818344097], [17, 12, 'tversky', False, 1.8714280974978128, 1.2367110814834104, 0.7229895068076836], [17, 111, 'tversky', False, 0.043710499892752226, 1.7422285628383676, 0.011900049713966746], [792, 2, 'cosine', True, 1.4860109969027273, 0.34266896721049594, 1.984627797769051], [773, 951, 'tversky', False, 0.614906079402126, 0.007181793821113615, 1.6440587558577187], [22, 53, 'tversky', True, 0.3703685136536233, 0.4873113246953681, 1.9710770668829722], [10, 214, 'tversky', True, 1.933146853327302, 0.0654316464038578, 0.35035361709691043], [774, 27, 'dice', False, 0.7829935427999264, 1.9027175733204547, 1.9684186329025901]]
          fun: -0.01950827429363477
    func_vals: array([-0.01836469, -0.00991111, -0.01852145, -0.01857251, -0.01881469,
       -0.01867482, -0.01792077, -0.01251496, -0.01866729, -0.01762167,
       -0.01028846, -0.01600037, -0.01283918, -0.00859502, -0.01764106,
       -0.01734567, -0.01858057, -0.0183914 , -0.01852392, -0.01625786,
       -0.01875446, -0.01869736, -0.01869883, -0.0186427 , -0.01868547,
       -0.01847678, -0.01868547, -0.01764329, -0.01868547, -0.01903657,
       -0.01872738, -0.01950827, -0.01862681, -0.01863537, -0.01876539,
       -0.01865657, -0.00114329, -0.01878984, -0.01858695, -0.01848162,
       -0.01908335, -0.01840756, -0.01840044, -0.0188462 , -0.01933212,
       -0.01751318, -0.01869127, -0.01858279, -0.01875942, -0.01872808,
       -0.01834948, -0.01856456, -0.01883602, -0.01891379, -0.01529428,
       -0.01845619, -0.01759686, -0.01854688, -0.01870593, -0.01862116,
       -0.01943748, -0.01861578, -0.01887902, -0.01858803, -0.01529638,
       -0.01873956, -0.01864129, -0.01901975, -0.01949347, -0.01864436])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275)]
 random_state: RandomState(MT19937) at 0x10FB3EC00
        space: Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize')])
        specs: {'args': {'func': <bound method Optimizer.evaluate_single of <__main__.Optimizer object at 0x111d54a10>>, 'dimensions': Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize')]), 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=759302275), 'n_calls': 70, 'n_random_starts': 20, 'acq_func': 'gp_hedge', 'acq_optimizer': 'auto', 'x0': None, 'y0': None, 'random_state': RandomState(MT19937) at 0x10FB3EC00, 'verbose': True, 'callback': None, 'n_points': 10000, 'n_restarts_optimizer': 10, 'xi': 0.01, 'kappa': 1.96, 'n_jobs': -1}, 'function': 'base_minimize'}
            x: [738, 7, 'cosine', True, 0.1281479786771185, 1.4260541895140952, 0.23240544397295199]
      x_iters: [[491, 463, 'jaccard', False, 0.10824635561297138, 1.1159811239131203, 1.4459863233267856], [87, 466, 'dice', True, 1.615173320393269, 1.5199791709203145, 0.8607954746652582], [382, 127, 'tversky', False, 0.6633995997786127, 0.9987888403368537, 0.12431303755456449], [510, 527, 'tversky', False, 0.01542515848582027, 0.8630680678740701, 0.9663918369257882], [693, 131, 'dice', False, 1.0290449598236326, 1.4781238200755467, 1.8770337192164144], [517, 542, 'tversky', False, 1.2056097018944083, 1.7651902469779703, 1.2182896174302396], [357, 562, 'asymmetric', True, 0.08013595033199163, 0.3082423777261088, 1.3544559308703723], [477, 20, 'asymmetric', True, 1.0832162421294063, 0.16650852048517642, 0.43855114272983], [599, 244, 'asymmetric', True, 0.7178086710467598, 1.9583640949693055, 1.5192416683648082], [259, 54, 'jaccard', True, 1.7868659721017133, 1.6433454631956403, 0.40172263759048554], [95, 558, 'dice', False, 1.4410273543652137, 0.13174600984212884, 1.5217071000941957], [573, 352, 'asymmetric', False, 0.7489572372767684, 0.6396494413813841, 1.888365580173694], [132, 613, 'dice', True, 1.7140449622895857, 0.18909026601596374, 1.0559846472920047], [133, 247, 'asymmetric', False, 1.6308100457665724, 0.11434599946414495, 0.22068926416816242], [331, 957, 'tversky', True, 0.8168620229742869, 0.7794142964375468, 0.2064326869461473], [749, 191, 'cosine', False, 1.8299541193614635, 0.12691837151172816, 0.9387997820291063], [711, 909, 'asymmetric', True, 0.07892873383369438, 1.2689358503196515, 1.898781739034956], [383, 473, 'dice', True, 1.148496141407606, 0.1115897422151231, 1.4300217401942403], [513, 722, 'tversky', True, 1.3574867885878252, 1.560494667416899, 0.9670396939803179], [243, 806, 'dice', True, 1.495308606479201, 1.8487398202497236, 0.5575422504880204], [800, 0, 'jaccard', True, 0.0, 2.0, 0.0], [799, 962, 'tversky', True, 1.666135127432846, 0.39967944830783997, 0.07292153027299998], [800, 1000, 'cosine', True, 0.0, 2.0, 2.0], [793, 817, 'dice', False, 0.06118269186164056, 0.17685788080655407, 0.2717233742717101], [800, 1000, 'jaccard', True, 0.0, 2.0, 2.0], [799, 67, 'tversky', True, 1.5177133148218487, 0.1907711951999374, 1.9933230316095754], [800, 1000, 'jaccard', True, 0.0, 2.0, 0.0], [788, 998, 'cosine', False, 1.8552445494401573, 1.6103911981891805, 1.6751801210206205], [800, 1000, 'jaccard', True, 0.0, 2.0, 2.0], [782, 11, 'dice', False, 1.1748323855155312, 1.982841306131215, 0.01406694539990561], [789, 29, 'tversky', True, 1.8394590985655395, 0.17746563552097053, 1.726489327427269], [738, 7, 'cosine', True, 0.1281479786771185, 1.4260541895140952, 0.23240544397295199], [800, 0, 'tversky', True, 0.0, 2.0, 2.0], [787, 992, 'jaccard', True, 1.9611850819701653, 0.1605857725443918, 0.042973066203509054], [789, 926, 'tversky', False, 1.9552636423215684, 1.9814840690302769, 0.09877445472612781], [602, 995, 'cosine', True, 1.992126396425087, 0.24945706954989882, 1.985564617505477], [12, 944, 'cosine', False, 0.07553454001858874, 1.9558615040386411, 0.9433318863222457], [592, 42, 'dice', True, 1.9136040588174301, 1.5593513409074369, 0.24592459436354824], [593, 966, 'jaccard', False, 1.8248994831484993, 1.9285019127756355, 0.06978109483586593], [568, 946, 'dice', True, 0.690954823342575, 0.08744168733645964, 0.05954706243254783], [613, 32, 'jaccard', False, 0.9815197252087018, 0.03562548061101035, 1.876437009472826], [459, 978, 'cosine', True, 1.9850499547696707, 1.9124525477478402, 0.22320187410223397], [532, 993, 'dice', True, 0.5198888606001487, 1.9936815783075041, 1.81736280903925], [614, 0, 'jaccard', True, 2.0, 2.0, 2.0], [697, 0, 'cosine', True, 0.0, 2.0, 0.0], [800, 916, 'asymmetric', False, 1.6429054375512415, 1.6001715068077556, 0.20194139851081278], [799, 893, 'dice', False, 0.22172045490262443, 0.1318713867301933, 1.898531569870476], [626, 1000, 'jaccard', True, 2.0, 2.0, 0.0], [794, 488, 'dice', True, 1.9617554860316009, 0.14917985707530515, 0.05657856692308984], [560, 106, 'dice', False, 0.026315008135555214, 0.07031592590608683, 0.09905755471732072], [488, 992, 'jaccard', False, 0.05859496062765769, 0.06530558583535774, 1.740148321121776], [648, 126, 'tversky', True, 0.09903763083059183, 0.18801354981945978, 0.08791144993974821], [623, 0, 'jaccard', True, 2.0, 2.0, 2.0], [590, 32, 'dice', True, 1.9133661542269929, 1.6794275995786547, 1.9920658021540452], [481, 123, 'cosine', False, 1.9510987295387188, 1.9042840121586933, 0.16876678188192254], [582, 962, 'tversky', True, 1.6824902568149258, 0.08166659743492934, 1.9658335604747084], [800, 15, 'asymmetric', False, 0.8939290544367937, 0.016621540738533728, 1.9604115099045916], [642, 1000, 'jaccard', True, 0.0, 2.0, 0.0], [797, 4, 'jaccard', True, 1.7316675645854651, 0.5887105479365674, 0.18224559418619382], [591, 890, 'cosine', True, 0.1377728524750466, 0.026572725552136196, 0.035706858536873616], [649, 0, 'cosine', True, 0.0, 2.0, 2.0], [650, 1000, 'cosine', True, 0.0, 0.0, 2.0], [790, 232, 'tversky', False, 0.11338276998038757, 1.9641104809296925, 0.012481860428883888], [795, 841, 'dice', True, 1.6827650117535042, 1.906685651222717, 1.9455887229690645], [795, 980, 'asymmetric', True, 1.8292476478935011, 0.3597699727754791, 0.12507317021561717], [609, 933, 'dice', False, 1.9583071744476577, 1.9588338721516942, 0.16081097580387563], [597, 961, 'jaccard', False, 1.9281132903253382, 0.044492975658227525, 1.9699187787386356], [768, 49, 'jaccard', False, 0.044711098184787364, 0.1414198706775507, 0.279477808381911], [641, 0, 'cosine', True, 0.0, 2.0, 2.0], [656, 923, 'dice', True, 0.034534542324945024, 1.9708806867254898, 1.9791957736277153]]
          fun: -0.009474539402992893
    func_vals: array([-0.00855291, -0.00687561, -0.0086559 , -0.00843831, -0.00869319,
       -0.00875258, -0.00738646, -0.00870873, -0.00865803, -0.00874683,
       -0.00859295, -0.00809371, -0.00658969, -0.00663215, -0.00661575,
       -0.0072672 , -0.00693164, -0.00664873, -0.00836451, -0.00714769,
       -0.00873327, -0.0085226 , -0.00648353, -0.00667023, -0.00947454,
       -0.00947454, -0.00654301, -0.00947454, -0.00947454, -0.00862478,
       -0.00947454, -0.00646666, -0.008711  , -0.00864921, -0.00872707,
       -0.00947454, -0.00947454, -0.00871484, -0.00733672, -0.00782185,
       -0.00947454, -0.00890476, -0.00648353, -0.00655657, -0.00947454,
       -0.00947454, -0.00947454, -0.00947454, -0.0086976 , -0.00935032,
       -0.00847932, -0.00830499, -0.00947454, -0.00947454, -0.00947454,
       -0.00947454, -0.00872614, -0.00947454, -0.00689622, -0.00855911,
       -0.00862805, -0.00871765, -0.00649831, -0.0086943 , -0.00752333,
       -0.00648353, -0.00947454, -0.00947454, -0.00868734, -0.00839447])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667)]
 random_state: RandomState(MT19937) at 0x1034C3C00
        space: Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize')])
        specs: {'args': {'func': <bound method Optimizer.evaluate_single of <__main__.Optimizer object at 0x110494ad0>>, 'dimensions': Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize')]), 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1594605667), 'n_calls': 70, 'n_random_starts': 20, 'acq_func': 'gp_hedge', 'acq_optimizer': 'auto', 'x0': None, 'y0': None, 'random_state': RandomState(MT19937) at 0x1034C3C00, 'verbose': True, 'callback': None, 'n_points': 10000, 'n_restarts_optimizer': 10, 'xi': 0.01, 'kappa': 1.96, 'n_jobs': -1}, 'function': 'base_minimize'}
            x: [5, 0, 'jaccard', True, 2.0, 2.0, 2.0]
      x_iters: [[55, 771, 'jaccard', True, 0.25200366504637356, 1.3088721449313157, 0.5911626607592771], [239, 465, 'asymmetric', True, 1.6168072590893439, 0.14903220029720024, 0.8042867821345276], [78, 583, 'tversky', False, 0.9940074295999115, 0.6238670528691254, 1.954445996558761], [444, 62, 'dice', True, 0.761544200090357, 1.8342549732077615, 1.0488895518486154], [188, 328, 'jaccard', False, 1.2997269405866376, 0.49284600493123876, 1.473680981524212], [19, 348, 'jaccard', False, 0.825695711707469, 1.4892435341046746, 0.9343253881042746], [345, 884, 'dice', True, 1.4106846450013397, 0.473089664694336, 0.4907720360603761], [434, 480, 'jaccard', False, 0.7468007852713722, 0.7390241143328179, 1.4097240734046803], [568, 496, 'jaccard', False, 1.6316217140750366, 0.8527472140757342, 0.8676502169685665], [549, 85, 'dice', True, 0.7282897362080561, 1.3362904764870842, 0.6891516974001369], [328, 886, 'jaccard', False, 1.471879632358535, 1.4396069166099765, 0.20861831914949996], [119, 284, 'dice', True, 1.0027665794580032, 0.24718536687712117, 0.11157145114851133], [230, 771, 'asymmetric', True, 0.07886228310494948, 0.7451098776847961, 0.07529707965254141], [196, 740, 'asymmetric', True, 0.16206664859015654, 1.2611057281227478, 0.800236187757976], [72, 267, 'cosine', False, 1.5290942832805943, 0.31857086630309, 1.8849604292804791], [366, 373, 'dice', False, 1.4209627640585552, 1.683451027572036, 1.0127052094906712], [699, 102, 'cosine', True, 1.144471624257663, 0.06458121549193498, 1.908649661496114], [13, 136, 'asymmetric', True, 0.1919064754510445, 0.2833709211088476, 0.43406500703176676], [518, 222, 'tversky', False, 0.13316382419026487, 1.6395537371544295, 1.2428775718007736], [719, 620, 'dice', False, 1.1851749283752984, 0.6997473068856462, 1.9834739449958163], [777, 993, 'tversky', True, 1.9576078214173693, 1.8771842046653713, 1.8618606260731443], [84, 38, 'tversky', False, 1.9327308050560625, 1.9288478665906046, 0.07045685281726245], [785, 949, 'cosine', False, 0.3212921101987581, 1.901347633096996, 0.3273763844721625], [761, 56, 'tversky', True, 0.16291688979462673, 0.31768163275773903, 0.09015011531171348], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [5, 1000, 'jaccard', True, 2.0, 2.0, 2.0], [591, 6, 'asymmetric', False, 1.7127850810187908, 1.6183554550761154, 1.98902443864864], [5, 1000, 'jaccard', False, 0.0, 2.0, 2.0], [5, 1000, 'jaccard', True, 2.0, 2.0, 2.0], [9, 944, 'tversky', False, 1.9782595308061497, 0.01762605458858624, 0.5615364423530446], [5, 0, 'jaccard', True, 0.0, 2.0, 2.0], [14, 939, 'cosine', False, 1.8012052767891291, 1.9046359945419553, 0.19815544384695], [777, 971, 'jaccard', False, 0.014282385679226243, 0.10699268649216667, 1.4847386619420015], [707, 970, 'tversky', True, 0.06550031797190094, 0.01279151770437115, 1.8226037235288226], [800, 1000, 'jaccard', True, 2.0, 2.0, 2.0], [5, 1000, 'jaccard', True, 2.0, 2.0, 2.0], [5, 1000, 'jaccard', True, 0.0, 2.0, 2.0], [785, 11, 'jaccard', True, 0.665988999408596, 0.14610752285427522, 0.00012765566846284496], [772, 9, 'cosine', True, 1.6282155095309008, 1.7153032229095346, 0.023606117978367765], [52, 956, 'dice', False, 0.13880970279506724, 1.7465861606034125, 1.8643604197629506], [5, 0, 'jaccard', True, 2.0, 0.0, 2.0], [10, 976, 'tversky', True, 1.9759715541979457, 0.07673853271752319, 1.9346959440476155], [782, 783, 'asymmetric', False, 1.8353485714790234, 1.7167760000332506, 1.9490407821271674], [76, 631, 'cosine', False, 0.0702064156938167, 0.0942573821480748, 1.9884897668443229], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [5, 0, 'jaccard', True, 0.0, 2.0, 2.0], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [5, 0, 'jaccard', True, 0.0, 2.0, 2.0], [779, 48, 'jaccard', False, 1.8766470316893533, 0.01694742971893382, 0.30582605054806905], [800, 0, 'jaccard', True, 2.0, 2.0, 2.0], [26, 172, 'tversky', False, 0.03922749866275189, 1.8035794356360713, 0.22274757452120425], [683, 996, 'dice', True, 0.031863972591215324, 1.9212127624957858, 1.9752782458558544], [5, 1000, 'jaccard', True, 2.0, 2.0, 0.0], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [5, 0, 'jaccard', True, 0.0, 2.0, 2.0], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [771, 110, 'tversky', True, 1.2694995219798586, 1.9326074859976161, 0.026970628294909378], [5, 1000, 'jaccard', True, 2.0, 2.0, 2.0], [6, 966, 'cosine', True, 1.7155649272188314, 0.16026430450839493, 0.25580388024515216], [44, 64, 'dice', False, 0.13599846371592442, 0.20840597952122436, 1.9232123858599242], [55, 54, 'dice', False, 1.9092230871297433, 0.03151566967300568, 0.12520720455279546], [784, 21, 'tversky', True, 0.07369802490659418, 0.14198279525257876, 1.7945133976382617], [741, 953, 'asymmetric', False, 1.8091404146993975, 1.951227314738233, 0.04010448047734295], [14, 65, 'tversky', False, 1.8701702171073438, 1.9770396270499146, 0.06130498982545608], [796, 7, 'cosine', True, 0.2185270780806124, 1.917287792608047, 0.07019993752360489], [798, 78, 'asymmetric', False, 0.2437641660469106, 1.8471535257012035, 1.993217102679244], [5, 0, 'jaccard', True, 2.0, 2.0, 2.0], [5, 0, 'jaccard', True, 0.0, 2.0, 0.0], [747, 910, 'jaccard', True, 0.12715568701604266, 0.12850138689233528, 0.12410455460017336], [16, 953, 'dice', True, 1.7450198923841125, 0.014252662084185411, 1.9096482046915226]]

          fun: -0.022753666867590932
    func_vals: array([-0.01806428, -0.0175686 , -0.0155436 , -0.02093144, -0.01637198,
       -0.00894407, -0.020188  , -0.01748319, -0.01235713, -0.0142396 ,
       -0.01950672, -0.0199326 , -0.01562863, -0.02142231, -0.0137382 ,
       -0.01539527, -0.00946672, -0.01868667, -0.01783417, -0.01849968,
       -0.02159286, -0.02137821, -0.01799997, -0.020502  , -0.02082592,
       -0.01816935, -0.01756764, -0.0211682 , -0.02168293, -0.01854075,
       -0.02149495, -0.01877959, -0.02074375, -0.02147933, -0.01872953,
       -0.02097945, -0.01875474, -0.02215717, -0.01795721, -0.01370632,
       -0.02275367, -0.02007552, -0.01986911, -0.02175442, -0.0176978 ,
       -0.01948917, -0.02006508, -0.01985798, -0.02136417, -0.01892896,
       -0.01768796, -0.02266025, -0.02231459, -0.01989636, -0.02261437,
       -0.02265405, -0.02247111, -0.02257135, -0.02044225, -0.01895765,
       -0.01874208, -0.01664567, -0.02126831, -0.01966603, -0.01746757,
       -0.01848387, -0.02073286, -0.02260201, -0.02119691, -0.02260195])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661)]
 random_state: RandomState(MT19937) at 0x10D567C00
        space: Space([Integer(low=5, high=1000),
       Integer(low=20, high=1500),
       Categorical(categories=(True, False), prior=None),
       Categorical(categories=('sgd', 'adagrad', 'adam'), prior=None),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=0.0001, high=0.1, prior='log-uniform', transform='normalize')])
        specs: {'args': {'func': <bound method Optimizer.evaluate_single of <__main__.Optimizer object at 0x10e25ba50>>, 'dimensions': Space([Integer(low=5, high=1000),
       Integer(low=20, high=1500),
       Categorical(categories=(True, False), prior=None),
       Categorical(categories=('sgd', 'adagrad', 'adam'), prior=None),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=0.0001, high=0.1, prior='log-uniform', transform='normalize')]), 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=792810661), 'n_calls': 70, 'n_random_starts': 20, 'acq_func': 'gp_hedge', 'acq_optimizer': 'auto', 'x0': None, 'y0': None, 'random_state': RandomState(MT19937) at 0x10D567C00, 'verbose': True, 'callback': None, 'n_points': 10000, 'n_restarts_optimizer': 10, 'xi': 0.01, 'kappa': 1.96, 'n_jobs': -1}, 'function': 'base_minimize'}
            x: [5, 1500, False, 'adagrad', 1e-05, 0.01, 0.0001]
      x_iters: [[546, 529, False, 'adagrad', 0.0007188774206790539, 0.00825936660035988, 0.01919140176370425], [429, 684, False, 'adam', 0.005786602903584689, 1.0147409739845907e-05, 0.011326542239952667], [250, 660, True, 'sgd', 0.0021676891342824124, 0.008280331923201469, 0.002314528051823591], [108, 1432, False, 'adagrad', 0.002360816713204664, 0.00023232027966444609, 0.0009205166463662647], [391, 1378, False, 'sgd', 6.15734761233867e-05, 0.0018871085833736638, 0.0011906807871039167], [384, 1149, True, 'sgd', 0.0005734043376186134, 2.4120635763038795e-05, 0.01924363035728187], [228, 684, False, 'adagrad', 0.0007050292308397307, 5.5446956143532083e-05, 0.00011769299612447559], [951, 1211, False, 'adam', 3.870832640464552e-05, 0.0001995870769322939, 0.003592834777105081], [139, 342, False, 'sgd', 0.00013303486197212565, 0.00012825556986130625, 0.07659701508877523], [571, 690, False, 'sgd', 1.4211927000534553e-05, 0.001483177585283817, 0.009892395237897414], [299, 259, False, 'adagrad', 0.00026842029324251584, 3.855182874149448e-05, 0.0009311356247851724], [953, 1284, True, 'adagrad', 0.00044908900965411037, 0.0004923277971612014, 0.00012335747302089604], [569, 420, True, 'adagrad', 0.000119780708434742, 0.0018395386033156218, 0.05898876493319495], [36, 517, False, 'adagrad', 0.004885539485611147, 0.007404731486556696, 0.015267859859730136], [846, 898, False, 'adagrad', 0.009495102435916503, 0.006166180378809093, 0.025233968811627042], [619, 559, True, 'sgd', 0.008665792116328775, 0.00590706473154015, 0.002107384585854419], [417, 1357, True, 'sgd', 0.00028853954316175064, 0.004631412747805744, 0.01697647968564154], [663, 1440, False, 'adagrad', 0.000724677772048553, 3.840766021470589e-05, 0.0016192424087793369], [446, 378, True, 'sgd', 1.6753418440334784e-05, 0.0005638789724248964, 0.0006007689360398172], [871, 606, False, 'adagrad', 0.00024830359318288894, 0.008633294077376978, 0.00035970532881697456], [5, 20, True, 'adam', 1e-05, 0.01, 0.0001], [5, 20, False, 'adam', 0.01, 0.01, 0.0001], [945, 275, True, 'adam', 2.134682230135318e-05, 1.2775588635421983e-05, 0.00010417386738144784], [5, 20, False, 'adagrad', 1e-05, 0.01, 0.0001], [5, 20, False, 'adagrad', 0.01, 1e-05, 0.0001], [263, 1213, False, 'adam', 0.0017073715689309831, 0.009528788675389881, 0.00010096961831364397], [994, 1448, True, 'adam', 0.007980726269390549, 1.237018154005725e-05, 0.00010284741997429353], [5, 20, False, 'adagrad', 1e-05, 0.01, 0.0001], [23, 1427, True, 'adagrad', 0.004844006279726314, 1.0907170571799697e-05, 0.00013588178995890606], [79, 1432, True, 'adam', 1.452898375476153e-05, 0.0007056143359897325, 0.09879111879687674], [37, 1189, True, 'adagrad', 3.411840015945109e-05, 1.6949214805000372e-05, 0.00011832644077747687], [76, 1454, False, 'adam', 0.0076838688462305274, 0.0052793951566885945, 0.0001385005637676376], [29, 52, True, 'adam', 1.032303904912992e-05, 1.203382909578532e-05, 0.00016332950943205674], [5, 20, True, 'adagrad', 1e-05, 0.01, 0.0001], [973, 1493, False, 'adagrad', 1.0536993505467287e-05, 4.371123999488081e-05, 0.00010153626606945444], [5, 20, False, 'adagrad', 1e-05, 1e-05, 0.0001], [16, 985, True, 'adam', 1.541423567424313e-05, 0.0068003272926888, 0.09766613193407046], [5, 1500, True, 'adagrad', 0.01, 0.01, 0.0001], [994, 277, True, 'adam', 1.2148706488895214e-05, 0.009954925166981831, 0.0001290364046166002], [17, 196, True, 'adagrad', 0.009924965398307046, 2.0117016671671433e-05, 0.04463907798963896], [5, 1500, False, 'adagrad', 1e-05, 0.01, 0.0001], [9, 1387, False, 'adam', 0.005479140906243588, 0.0007751089676570021, 0.00011561561428493891], [991, 68, True, 'adagrad', 0.004632851225616446, 0.005447503059144199, 0.00011145912030751973], [9, 39, False, 'adam', 0.006947333134120472, 3.655674862383772e-05, 0.00012110297756458387], [79, 25, False, 'sgd', 0.005686614066771827, 4.5208733646927156e-05, 0.0001084914003088602], [29, 1492, True, 'adam', 0.0003628060591082742, 0.008583165553489123, 0.00010637918835715713], [934, 1443, True, 'adagrad', 1.0576836604922068e-05, 1.3282788825520909e-05, 0.00010879723443730654], [14, 856, False, 'sgd', 1.1816836660227512e-05, 1.3818330886684923e-05, 0.00010247011204997528], [40, 1428, True, 'adagrad', 1.9985286623204987e-05, 0.004841616839528329, 0.00010280993183896992], [55, 1494, False, 'adam', 1.3048264660659603e-05, 0.0036804806372490164, 0.07471535097999775], [923, 130, False, 'adam', 2.5451656042352984e-05, 0.004124056816677849, 0.0001016359350214635], [5, 1500, False, 'adagrad', 1e-05, 0.01, 0.0001], [12, 1494, True, 'adagrad', 0.0035011026667394842, 1.3467092870643008e-05, 0.0001460086397824053], [69, 103, False, 'adagrad', 1.21036001326275e-05, 1.0042257610175203e-05, 0.08700510034075115], [5, 1500, False, 'adagrad', 1e-05, 0.01, 0.0001], [5, 1500, False, 'adagrad', 1e-05, 1e-05, 0.0001], [5, 1500, False, 'adagrad', 1e-05, 0.01, 0.0001], [5, 1500, False, 'adagrad', 1e-05, 1e-05, 0.0001], [32, 121, True, 'adam', 6.010192475866414e-05, 1.3122103150111654e-05, 0.00014311364736339653], [70, 1498, False, 'adam', 1.623344167646227e-05, 0.008005842313019814, 0.00010315047771361854], [44, 1469, True, 'adam', 1.2201470104878328e-05, 6.315556163084348e-05, 0.08557681652187567], [993, 137, False, 'adagrad', 1.0311388593378392e-05, 1.685990998213394e-05, 0.0956531882474157], [13, 37, False, 'adam', 0.007144335600891921, 1.0770284187868224e-05, 0.00019934266929349357], [15, 1285, True, 'sgd', 0.00976763288416217, 1.737970648033026e-05, 0.00010566233509933877], [996, 89, False, 'sgd', 1.4014356378053817e-05, 1.302022890035534e-05, 0.00010287166720720809], [920, 1452, False, 'adagrad', 0.009745633222199518, 1.57941623349239e-05, 0.0001310310101366027], [8, 217, True, 'adam', 1.105975472419858e-05, 5.6818903300975906e-05, 0.00011711484998993139], [5, 1500, False, 'adagrad', 1e-05, 1e-05, 0.0001], [49, 135, True, 'adagrad', 3.1744691920371875e-05, 1.6649570563591107e-05, 0.00010926276901468987], [5, 1500, False, 'adagrad', 1e-05, 1e-05, 0.0001]]
