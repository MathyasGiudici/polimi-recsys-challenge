          fun: -0.02309301045679694
    func_vals: array([-0.0127971 , -0.01279496, -0.01670433, -0.01728803, -0.01812303,
       -0.01130395, -0.01738267, -0.00434641, -0.01787071, -0.00850381,
       -0.01695763, -0.01350243, -0.01863869, -0.01419597, -0.00697401,
       -0.01622845, -0.01842724, -0.00848241, -0.01652643, -0.00973321,
       -0.02224876, -0.01109874, -0.02236023, -0.02231891, -0.01693732,
       -0.01784496, -0.02252691, -0.01212333, -0.02250231, -0.01598697,
       -0.00718364, -0.01664312, -0.02266832, -0.02241437, -0.02254581,
       -0.01421341, -0.02235042, -0.00982016, -0.01811667, -0.02307315,
       -0.02309301, -0.00270885, -0.01681879, -0.02307512, -0.0223115 ,
       -0.00438124, -0.02299783, -0.01353828, -0.02258303, -0.02247989,
       -0.01679839, -0.00592594, -0.02291423, -0.00889451, -0.02235901,
       -0.02227644, -0.01389764, -0.0174561 , -0.02255611, -0.02247856,
       -0.01558185, -0.01540198, -0.01666496, -0.01212841, -0.01463066,
       -0.0145543 , -0.01687896, -0.00658171, -0.02215854, -0.02245381])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222)]
 random_state: RandomState(MT19937) at 0x25D1FB0F990
        space: Space([Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=1000),
       Real(low=0.0001, high=10, prior='log-uniform', transform='normalize'),
       Integer(low=5, high=50)])
        specs: {'args': {'n_jobs': -1, 'kappa': 1.96, 'xi': 0.01, 'n_restarts_optimizer': 10, 'n_points': 10000, 'callback': None, 'verbose': True, 'random_state': RandomState(MT19937) at 0x25D1FB0F990, 'y0': None, 'x0': None, 'acq_optimizer': 'auto', 'acq_func': 'gp_hedge', 'n_random_starts': 20, 'n_calls': 70, 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=575175222), 'dimensions': Space([Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=1000),
       Real(low=0.0001, high=10, prior='log-uniform', transform='normalize'),
       Integer(low=5, high=50)]), 'func': <bound method Optimizer.evaluate_single of <__main__.Optimizer object at 0x0000025D20151A90>>}, 'function': 'base_minimize'}
            x: [1.5030839679715604, 997, 9.392629191951134, 44]
      x_iters: [[0.7658380509610128, 790, 0.8699183404303703, 18], [0.8327235266674666, 53, 0.004114998853336536, 9], [1.2665910063829415, 390, 0.0021887257755494266, 46], [1.247188373280118, 712, 2.5475142337911514, 12], [1.6908251319475787, 436, 0.31587709665932107, 37], [0.5576110254954402, 25, 0.0022101730731665455, 28], [1.862397419831521, 884, 0.00021047811322642455, 25], [0.14889573115149538, 559, 8.702912685405877, 30], [1.5636218922911016, 580, 0.0005286077336240844, 6], [0.3655917305040917, 9, 0.007216632336541139, 23], [0.9410104474831591, 675, 3.8168575165810474, 40], [0.7623128968200079, 837, 1.4704115518596104, 8], [1.7081967154495015, 238, 8.24724953880437, 12], [0.7763896390450187, 397, 0.015187044046239577, 48], [0.20946293170425762, 353, 0.020786388851427768, 37], [1.2737825751153584, 144, 5.216062047152575, 20], [1.7839161013262943, 474, 0.2475987099929135, 8], [0.4644419843750146, 640, 0.107494455548207, 31], [1.7105026055262682, 86, 0.6756730928426773, 40], [0.4199195887078583, 84, 0.0011976819037198255, 13], [2.0, 1000, 10.0, 50], [1.9879092974963082, 8, 0.0004620139202857016, 45], [2.0, 1000, 10.0, 5], [2.0, 1000, 10.0, 5], [1.9618182987025639, 992, 0.00011574676598891341, 12], [1.9946526766782886, 130, 8.835423697220417, 45], [2.0, 1000, 10.0, 5], [1.9911131747347293, 10, 8.527834494315169, 17], [2.0, 1000, 10.0, 50], [1.612067222135576, 990, 0.00014111125865839274, 43], [0.016165717345078438, 978, 0.00032080173000566665, 45], [1.9713545908018142, 998, 0.00025792433977256954, 47], [1.296125767169007, 959, 8.475772741662139, 44], [1.9911064867445567, 983, 9.698482158589297, 48], [2.0, 1000, 10.0, 50], [1.1906661285801705, 998, 0.00010453387877911882, 45], [2.0, 1000, 10.0, 5], [1.986120808662573, 6, 8.729572043454011, 49], [1.1994885508003523, 971, 3.9739924324847675, 5], [1.4118635351634559, 995, 9.220447427576529, 49], [1.5030839679715604, 997, 9.392629191951134, 44], [0.014946511551525269, 28, 9.283793170932196, 47], [1.976696694902371, 924, 0.00010251931163800621, 7], [1.7375454331070446, 1000, 10.0, 50], [1.738049383135053, 1000, 10.0, 5], [0.060019187145146105, 976, 8.099300931590703, 12], [1.3351941571330557, 996, 9.773619884819432, 9], [1.0638829899397904, 991, 0.0001170656997210477, 48], [1.4945498125313754, 984, 8.808008315799484, 49], [1.754590291477435, 1000, 10.0, 5], [1.9772217925760514, 995, 0.0005091104305068893, 6], [0.010453042144509485, 31, 0.00021370591932585043, 11], [1.7709401678065144, 1000, 10.0, 50], [0.007631182915018854, 990, 0.0002784479536295149, 16], [1.7567077337118284, 1000, 10.0, 5], [1.7601353891070823, 1000, 10.0, 5], [1.1067617743971991, 995, 0.00014138514165296318, 11], [1.9981899546730353, 113, 0.00012944991632094494, 20], [2.0, 1000, 10.0, 50], [2.0, 1000, 10.0, 50], [1.9887522582608912, 42, 0.00011501474092208873, 47], [1.9985464264414425, 42, 0.00012614989301430003, 10], [1.9372749593645775, 984, 0.009439367432777719, 50], [1.2614989905566123, 12, 0.0001264610741595694, 35], [1.9760073980874453, 49, 4.8122105393080075, 8], [1.2715243968362522, 40, 8.22092803081152, 49], [1.9939962298322116, 978, 0.13099505603221104, 10], [0.044346057752336916, 31, 0.00010656064237231483, 45], [1.9987600980333056, 1000, 9.427155195320868, 36], [2.0, 1000, 10.0, 50]]
