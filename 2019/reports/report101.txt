          fun: -0.038786810633260914
    func_vals: array([-2.82568365e-02, -2.63211643e-02, -3.52157897e-02, -2.79213949e-02,
       -3.74877917e-02, -2.85638430e-02, -2.72629167e-02, -3.58577864e-02,
       -3.35277494e-02, -3.28356673e-02, -3.28147158e-04, -2.87531631e-02,
       -2.50381028e-02, -1.57768489e-02, -2.85886382e-02, -3.14506440e-02,
       -2.69313334e-02, -2.88894130e-02, -2.59427861e-02, -2.39100442e-02,
       -2.88350616e-02, -3.45305798e-02, -2.86403689e-02, -2.58511326e-02,
       -2.33153812e-02, -3.27475227e-02, -2.12999071e-02, -2.84458946e-02,
       -3.15731350e-02, -2.74170314e-02, -1.17490602e-02, -3.28115127e-02,
       -3.23598117e-02, -1.78420299e-02, -5.42641076e-05, -3.04497646e-02,
       -3.58413339e-02, -2.77147633e-02, -1.72031199e-02, -1.08958601e-02,
       -5.26916570e-05, -3.38521256e-02, -2.85052837e-02, -2.89714425e-02,
       -2.81889445e-02, -3.33888205e-02, -2.70843562e-02, -3.26081424e-02,
       -3.59611605e-02, -3.06259227e-02, -3.18516335e-02, -2.52345572e-02,
       -3.42951199e-02, -3.02163721e-02, -3.22174466e-02, -2.54734096e-02,
       -3.55056011e-02, -2.71494964e-02, -2.44123839e-02, -2.93477824e-02,
       -3.67901623e-02, -1.30702682e-04, -3.40418097e-02, -2.17847606e-02,
       -3.87403651e-02, -3.87868106e-02, -1.15912473e-02, -3.17343548e-02,
       -2.03567425e-02, -2.16945340e-02])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024)]
 random_state: RandomState(MT19937) at 0x10B830C00
        space: Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       ...,
       Integer(low=5, high=1000),
       Integer(low=5, high=800),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Categorical(categories=(True, False), prior=None),
       Integer(low=5, high=800),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize')])
        specs: {'args': {'func': <bound method Optimizer.evaluate of <__main__.Optimizer object at 0x1148c15d0>>, 'dimensions': Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       ...,
       Integer(low=5, high=1000),
       Integer(low=5, high=800),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Categorical(categories=(True, False), prior=None),
       Integer(low=5, high=800),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize')]), 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=1740046024), 'n_calls': 70, 'n_random_starts': 20, 'acq_func': 'gp_hedge', 'acq_optimizer': 'auto', 'x0': None, 'y0': None, 'random_state': RandomState(MT19937) at 0x10B830C00, 'verbose': True, 'callback': None, 'n_points': 10000, 'n_restarts_optimizer': 10, 'xi': 0.01, 'kappa': 1.96, 'n_jobs': -1}, 'function': 'base_minimize'}
            x: [800, 130, 'dice', False, 2.0, 0.06645449914150482, 0.0, 124, 1000, 'jaccard', False, 2.0, 1.4568982966977921, 1.1915570273797769, 800, 1000, 'tversky', True, 0.8403440634469317, 2.0, 0.0, 5, 20, False, 'adagrad', 1e-05, 0.01, 0.0016383008979062898, 481, 800, 0.0, True, 5, 0.0, 0.0, True, 2.5802194484369156, 0.0, 5.0, 2.7268466077091325, 0.6702145369478825, 1.9862766182019822, 5.0]
      x_iters: [[685, 513, 'jaccard', False, 1.8021969700588258, 0.3260185381228185, 1.4572322070517605, 264, 666, 'cosine', True, 1.1528082845017364, 1.6768496139107731, 1.4745231952966336, 492, 515, 'cosine', True, 0.5851781879757766, 0.6487664743072673, 0.1910794593932859, 503, 885, False, 'adam', 2.1112234314101854e-05, 5.687435239954924e-05, 0.07081605799979104, 588, 48, 1.2126888994839895, False, 471, 0.27151422649484297, 1.366515723506506, True, 1.5388809742376799, 3.5737382806423867, 4.489294263114825, 1.6440585567307395, 2.7810049481188894, 1.845197626161099, 4.909204022723142], [691, 680, 'tversky', False, 0.14640287121920584, 0.8656715611702404, 0.7087605239846572, 305, 732, 'tversky', True, 1.0247218944415113, 1.7420582961110922, 0.284442570377661, 90, 903, 'asymmetric', True, 1.7800460803829765, 1.097361920600736, 1.3104645182161205, 757, 41, True, 'adagrad', 0.00054299180549281, 5.5467816496752956e-05, 0.0015052585171505043, 364, 137, 1.1242758837779796, True, 215, 0.13680937966228116, 1.9340798672516994, True, 4.189953782830312, 3.922837429249706, 0.21356809067452578, 0.6795361109347793, 2.641815414879324, 1.985725825455581, 4.46722263355214], [362, 484, 'asymmetric', True, 0.9200618931983551, 0.3943142602309134, 0.8151425535232151, 362, 202, 'asymmetric', False, 0.024594154341985204, 0.6000945931734635, 0.2503183975248123, 38, 292, 'cosine', True, 1.2917985976604527, 1.192889584393805, 0.7609637846672117, 640, 847, True, 'sgd', 0.000160126585271038, 0.0017143374348688682, 0.0006952031075626192, 424, 800, 0.8406474592771931, True, 601, 1.1994944389703062, 0.40347375669666075, True, 2.074693856820353, 3.4943817339956205, 4.509631534470006, 0.49838880808885666, 4.056813263403529, 1.665302824748993, 1.9603351831159976], [763, 948, 'dice', True, 0.1766880718293358, 1.1314369410694376, 0.3348313237206227, 779, 207, 'jaccard', False, 1.5249917525596999, 1.346775341295362, 0.40065302403267655, 269, 593, 'dice', True, 1.5630225352154712, 0.023167285219361403, 1.1836259234398878, 226, 747, True, 'adam', 0.0008559765056717066, 2.8389971111277647e-05, 0.027654255872171244, 134, 368, 1.009834702420012, True, 371, 0.7631071927247557, 1.0749076556157493, False, 1.547855606295114, 3.7944223328521383, 2.5888529426437454, 0.8918836024272987, 2.795783217695666, 3.365505315056618, 4.083748257427604], [20, 542, 'cosine', True, 1.3950846689106942, 0.8820494409896911, 1.0068856588669433, 72, 125, 'jaccard', False, 0.5196764627116489, 0.2244992756443745, 1.826841406586531, 244, 220, 'asymmetric', False, 0.4366518818811832, 0.9281109667124618, 0.4409143491400821, 559, 394, False, 'adagrad', 2.5642729553997197e-05, 1.3871735709980867e-05, 0.0019287749796335271, 254, 11, 0.9634005758484929, True, 412, 0.895501175639384, 0.14014341502648733, True, 4.867084415098297, 2.0343817514198186, 1.6252895528377351, 2.310809200485296, 3.1780270161488353, 2.510555180455833, 1.9234883913992529], [795, 97, 'asymmetric', False, 0.3921862731132849, 0.7810975888001837, 1.9044697240885209, 336, 157, 'tversky', True, 1.3303554930170032, 1.9044191792772338, 0.14056353618186404, 160, 455, 'asymmetric', False, 0.20409735577580462, 1.3974435451493532, 1.762852189650043, 15, 816, True, 'adagrad', 0.0001770371038402292, 0.007386660985096259, 0.0005738781211635255, 222, 643, 1.4841773026427316, False, 221, 0.9967636065119039, 1.6932437907796847, False, 3.4053275037525843, 2.4561791884234, 0.30004273410265464, 3.9410329161757, 4.6477849594341425, 3.6451741527243926, 4.823857517856621], [7, 639, 'asymmetric', False, 0.27620721796276865, 0.14930508616369978, 0.44775554722477906, 144, 63, 'dice', False, 1.3024922173902642, 0.5902763882293146, 1.955788612382002, 362, 239, 'dice', True, 1.8960632823169334, 0.023335073588154124, 1.5167830251043057, 879, 1291, True, 'adagrad', 0.0006576293108504147, 0.0008534043124338457, 0.00020740807947375425, 700, 564, 0.22841872980287087, False, 10, 1.149388159071023, 0.9145091701725434, False, 1.3029603336421405, 3.5317523560401782, 3.014323140468529, 2.5034914867324587, 0.982192768227603, 3.578784949347995, 0.6692055234221257], [92, 297, 'cosine', True, 1.8347001792672049, 0.8910043995230537, 1.4110977176372057, 159, 871, 'dice', False, 0.4151628066416545, 0.15520588179267605, 1.7511099706507753, 736, 7, 'tversky', True, 1.2850133982498049, 0.9362786030591763, 0.7905855325611642, 92, 305, False, 'sgd', 0.00031179140295321394, 0.0016460579270523323, 0.00042123712536960996, 895, 787, 0.2937577369510123, True, 305, 1.2625677245747866, 0.24372412344518551, False, 3.1131610922751958, 1.2126910215087647, 0.9385950150571378, 2.151312113748963, 0.40340127692303557, 3.758847910155938, 4.632104538189968], [783, 904, 'dice', False, 1.8521143890993306, 0.67674171436634, 0.16211834785241844, 41, 638, 'asymmetric', False, 1.7785164141116752, 1.683264070554889, 0.7897789256043575, 610, 295, 'dice', False, 0.23304668730957917, 1.1110276149562748, 1.4069440590772355, 106, 1394, False, 'adagrad', 3.843406796350844e-05, 0.0031089415592509516, 0.014240642085389861, 921, 438, 1.681809720170466, True, 642, 0.5211522481542189, 1.5882895814253584, True, 3.058453367985308, 1.0749410555362124, 2.2328995811623447, 4.083152886286064, 3.4084637031778997, 4.027948850504684, 2.3094227833220033], [433, 789, 'cosine', True, 1.545748207301074, 0.4906377852233902, 1.0997099545796873, 470, 210, 'jaccard', False, 1.4569690349014977, 1.4376448266069284, 1.3260258415638433, 685, 1000, 'cosine', False, 1.441261277301325, 0.47278049376828724, 1.7085441795579748, 456, 778, True, 'adagrad', 0.003960338933628294, 3.452884887112837e-05, 0.0011017573554290435, 417, 518, 0.37411338666432675, True, 613, 1.5806748598363178, 0.8541331247163719, False, 1.8603526397740136, 0.6363545406801997, 0.683901319884131, 1.363121187802587, 0.08923516609006422, 0.26462293406749, 4.765210917718117], [477, 351, 'cosine', True, 0.3865608618188846, 1.9809167835727517, 1.6913432706699434, 444, 725, 'cosine', False, 0.18136387756856268, 1.4292125472723811, 1.5948662033027077, 176, 391, 'cosine', False, 1.394233961003648, 0.553880682898329, 0.7980844424621159, 160, 628, True, 'sgd', 1.0077793357821467e-05, 0.0025884628557159496, 0.0007353842901916416, 545, 272, 0.918007250122072, True, 113, 0.01967385708023284, 1.8592505147862042, False, 4.815511341294457, 2.7414060229771127, 3.5735832769474873, 0.41026599094732946, 3.0450876267100195, 4.014651326156288, 3.321670126285002], [678, 104, 'dice', False, 0.035689628842802364, 0.8349212601000624, 0.6387814445996379, 264, 193, 'tversky', False, 1.41546013882252, 1.3167418889494276, 0.693342723874456, 190, 238, 'cosine', True, 1.7589244968047728, 0.757833783526431, 1.0523501859986488, 937, 1112, True, 'adagrad', 0.004644378975753859, 0.005762624273548638, 0.017820173646821934, 585, 607, 1.862127506166316, False, 745, 1.6362315760388546, 1.5581425589618338, True, 1.1522841872483545, 3.151859853058787, 4.096182573040342, 2.2143404829073825, 4.372279554167565, 4.231661470079587, 4.297133891400472], [570, 680, 'jaccard', False, 1.1053331001862232, 1.5628049341852857, 0.07673604005654246, 296, 285, 'jaccard', True, 0.002221017017820959, 1.5559261190800229, 1.4790873238835918, 43, 533, 'dice', True, 0.15619231272525871, 1.013216937825562, 0.6645141317538951, 47, 364, False, 'sgd', 0.00014215474669497985, 0.0074922904044047904, 0.05568683521993516, 492, 615, 0.6981046541112607, False, 95, 1.837101273098015, 0.33603164903161736, True, 2.117097043683085, 4.3736757135013, 3.9529419868146376, 1.4783257987124923, 0.8516765369398955, 2.544445259521924, 1.77792206083376], [273, 208, 'asymmetric', True, 0.7489407846216053, 0.9814589927932176, 1.5018217644227183, 187, 760, 'cosine', True, 1.053249298981321, 0.047805309929307885, 1.800128669441845, 199, 925, 'jaccard', False, 0.1394684738121215, 0.9501419130564512, 1.307427139098793, 702, 667, True, 'sgd', 0.0002620135190390409, 1.4624260205816814e-05, 0.09435074001326436, 621, 661, 1.9477644069083033, False, 587, 1.5722673853460318, 1.5766134963286935, True, 3.4178017028943324, 4.591557552450091, 0.9497460045074615, 2.270024841730259, 0.3944758767761514, 2.919422314814474, 1.152262983481077], [707, 775, 'dice', True, 0.1529085896207754, 1.7890590831054067, 0.18664800237171256, 101, 751, 'jaccard', True, 1.32018376937173, 1.5937711645346593, 0.2235959256448941, 474, 144, 'asymmetric', False, 1.3256256302099483, 0.6328467699697943, 1.0935411763167957, 850, 1195, False, 'adam', 1.085184908261173e-05, 0.006104249578951922, 0.02138322064443573, 417, 231, 0.9808133720065533, False, 534, 1.987895185496572, 1.5397443999461227, True, 0.004061665300815199, 2.4667034042654343, 4.46214805345399, 0.11013858226129493, 1.4753982966351977, 1.8654581988562138, 3.283603901412623], [779, 740, 'asymmetric', True, 0.3939947577932713, 0.9142557967944018, 0.44801053881936526, 579, 571, 'tversky', True, 0.10243889764134176, 0.9377691273958773, 1.1732090469501664, 392, 89, 'tversky', False, 1.0798307643835567, 0.24286904862375597, 1.1424808195524556, 684, 166, False, 'sgd', 5.474598174022069e-05, 2.3047759636348217e-05, 0.004557382692138079, 692, 271, 0.8861385842247362, True, 611, 0.4339438832682051, 0.6220122612081026, True, 3.03881296706807, 2.638910674403605, 4.610316549686583, 1.6175187260737813, 1.7204432108459353, 4.4664340669033304, 0.8856055925297464], [504, 692, 'jaccard', True, 1.9880778924668625, 1.7716315825336788, 0.26756610474223, 85, 45, 'jaccard', True, 0.3008815997535304, 0.31038433067675536, 1.341566627594657, 585, 941, 'dice', False, 0.5168968036613898, 1.7581608731699723, 0.9641434820754786, 695, 1441, False, 'sgd', 0.0017213049506696215, 0.0005352865431626254, 0.0017078821753104113, 6, 311, 0.9149459088489509, False, 513, 0.015862419920736007, 1.1490364291362944, True, 1.5040227217660216, 4.889309533974351, 1.8645290227291802, 2.2478058897162256, 0.7411913081759143, 2.1725537093046476, 2.3046296750408697], [589, 474, 'cosine', False, 1.0760429857594698, 0.8602889351017267, 0.5393146022498739, 606, 648, 'dice', True, 1.3786492032466553, 1.763085580571999, 0.8904160801104954, 620, 520, 'tversky', True, 0.9509098100889235, 0.6620131193948348, 1.1977016550398383, 117, 1300, False, 'adam', 0.00026236753494154956, 0.001050571202773497, 0.02371616625642374, 338, 157, 1.3425086412311198, True, 139, 1.873180196345629, 1.802340185762443, False, 2.8815878030101025, 0.005064051273531157, 2.734711840245265, 4.531240503660434, 0.24719868230218273, 0.2899602968199367, 1.1736462668512806], [640, 739, 'asymmetric', False, 1.0655807739386391, 0.4060601645465095, 1.6493127862540662, 622, 507, 'dice', True, 0.47479113353771185, 0.42632736229884405, 0.5194694899056899, 654, 47, 'tversky', True, 1.330661659585902, 0.16560205538938935, 1.8397295976587618, 581, 806, False, 'sgd', 4.1209335997862716e-05, 0.007844989268503976, 0.008615701772576216, 582, 730, 0.0670502513060789, True, 386, 1.805621815655563, 1.581784068137944, False, 0.3468161066600018, 0.3993983814966951, 4.212847199133913, 1.5184872438082129, 2.372132333868871, 3.499710249551391, 4.296998144611723], [690, 195, 'asymmetric', False, 1.4385483091656717, 1.5666588408290443, 1.3610565202102267, 438, 848, 'cosine', True, 1.0136737620681784, 0.07907702069766033, 1.837105498305843, 720, 361, 'jaccard', True, 1.131325766048273, 0.20034766178616797, 0.43544690726935353, 89, 1465, True, 'adagrad', 0.007742677877718566, 7.129726785806988e-05, 0.05019970949021826, 723, 572, 1.5091110799888798, False, 156, 1.5331131464719867, 0.06543072452216171, True, 4.705156118583131, 3.0263647218236582, 1.7816002182175037, 2.2506610145570187, 1.9453764969053855, 3.1802284414990134, 2.4088429044066073], [765, 44, 'asymmetric', True, 2.0, 0.0, 1.3138054091551712, 5, 1000, 'tversky', True, 1.7499512985216614, 0.27549449752991206, 0.0, 800, 0, 'asymmetric', True, 0.0, 2.0, 0.0, 276, 709, False, 'adam', 0.0001568723756396382, 1e-05, 0.03581787327090424, 714, 300, 2.0, False, 800, 1.0741507334814697, 0.0, True, 3.173064517703186, 1.0272715192010287, 0.0, 5.0, 3.748533848794755, 0.8664754441448692, 5.0], [800, 26, 'cosine', True, 0.0, 1.2149347163797135, 0.26347785748405683, 261, 1000, 'asymmetric', True, 2.0, 0.285458880452446, 2.0, 5, 323, 'jaccard', False, 0.7597845126559054, 0.0, 0.0, 1000, 20, False, 'adagrad', 0.003781385052499853, 0.01, 0.1, 1000, 800, 2.0, True, 800, 0.0, 0.0, True, 2.4058440669652352, 5.0, 2.3731846838969366, 0.31022345968568793, 5.0, 5.0, 0.0], [790, 145, 'cosine', False, 0.8653973514864464, 1.0482736687376502, 1.9282325106761173, 557, 897, 'asymmetric', False, 0.3518623038246572, 0.7571555452023649, 1.7186648124554944, 24, 385, 'tversky', False, 0.9115602715020196, 1.452918122550162, 0.007482211826788992, 423, 831, False, 'sgd', 2.1045187909721447e-05, 2.7550632044254792e-05, 0.00046821387988663435, 520, 649, 0.1648052145051146, True, 430, 0.7369628831966606, 0.6190125524708644, True, 4.217859702543157, 1.258681418916015, 0.8851601892060862, 3.1544596575951473, 2.1060212435495105, 1.3873140234229109, 0.32201751091466657], [5, 1000, 'asymmetric', False, 2.0, 1.0096951860036778, 2.0, 800, 0, 'asymmetric', False, 0.0, 0.06764915178615653, 2.0, 800, 0, 'cosine', False, 2.0, 1.8934447282680495, 2.0, 1000, 20, False, 'adam', 0.01, 0.01, 0.0001, 5, 800, 0.0, True, 800, 0.9921490869788147, 0.0, True, 0.0, 5.0, 5.0, 0.0, 0.0, 5.0, 5.0], [37, 639, 'cosine', True, 0.31868086150017866, 0.33904746864843677, 0.0, 5, 1000, 'asymmetric', False, 0.0, 0.2907636374749799, 0.0, 642, 0, 'cosine', True, 0.0, 0.0, 1.9752695533161206, 5, 200, False, 'adagrad', 0.00020945044247744647, 0.01, 0.0001, 1000, 5, 0.9424796673307257, True, 5, 1.4988799771784251, 2.0, False, 5.0, 2.568830059505408, 5.0, 5.0, 4.834772762440283, 5.0, 3.3361894520562236], [800, 1000, 'tversky', True, 2.0, 0.7566402638640736, 0.0, 5, 1000, 'jaccard', True, 2.0, 2.0, 0.0, 645, 268, 'asymmetric', True, 0.6622906758285582, 0.0, 1.9519918087272934, 5, 1500, True, 'adam', 1e-05, 0.01, 0.0001, 1000, 5, 1.8365220927264267, True, 5, 0.0, 0.0, False, 1.2984420992037284, 0.5485518541652389, 5.0, 0.0, 5.0, 0.01660126171795208, 3.0085254100562975], [800, 47, 'dice', True, 2.0, 0.0, 0.0, 5, 0, 'dice', False, 2.0, 2.0, 0.2933169156684996, 800, 998, 'jaccard', True, 1.9968027365217504, 0.5759717922385351, 0.0, 363, 1500, True, 'adagrad', 1e-05, 0.00015402097524618022, 0.1, 1000, 800, 1.4002840376858203, True, 800, 0.727128573433103, 0.0, True, 1.985764134748571, 0.0, 2.3584363160270265, 2.0270144576506377, 3.4158835917023405, 0.0, 0.0], [21, 1000, 'dice', True, 1.5546445493659262, 2.0, 0.5744565552167111, 5, 102, 'tversky', False, 0.8721917388730636, 2.0, 0.3995779701696056, 800, 819, 'jaccard', False, 0.0, 0.0, 0.0, 560, 1500, False, 'adam', 2.4452063055077614e-05, 2.8810931591457202e-05, 0.0012067501610833326, 1000, 44, 2.0, False, 800, 1.8060389952933333, 0.0, True, 0.6968191607074967, 0.0, 0.0, 4.3867997263166885, 0.0, 0.0, 5.0], [5, 1000, 'cosine', True, 2.0, 0.0, 1.8661919375438487, 5, 1000, 'jaccard', False, 2.0, 0.9407902116326015, 2.0, 5, 446, 'asymmetric', False, 0.0, 2.0, 0.888401139237531, 5, 1451, True, 'sgd', 0.004424444798708293, 2.3699973491483793e-05, 0.0001, 59, 154, 2.0, False, 800, 0.5862893191748747, 0.6332306327996478, False, 2.434236047847828, 3.9303907904857036, 0.0, 0.8942347047338717, 1.8645222775958907, 0.0, 5.0], [395, 462, 'jaccard', False, 2.0, 0.0, 2.0, 800, 1000, 'dice', True, 2.0, 0.0, 0.0, 775, 0, 'jaccard', True, 2.0, 0.1093999528624521, 2.0, 214, 32, False, 'sgd', 0.01, 1e-05, 0.0001, 431, 532, 2.0, True, 575, 0.10764522817158804, 0.0, True, 0.008155032349784343, 0.05323232468416094, 0.0, 4.211039050429516, 5.0, 5.0, 4.4304621212730595], [800, 1000, 'cosine', True, 0.0395179575500928, 0.9437350941737264, 2.0, 5, 0, 'dice', True, 2.0, 0.0, 0.0, 5, 0, 'dice', True, 0.0, 2.0, 0.11109432443940737, 1000, 1404, False, 'adam', 0.01, 1e-05, 0.1, 5, 5, 0.9862752469914436, True, 800, 0.0, 0.7497808114179543, True, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 5.0], [5, 1000, 'asymmetric', False, 2.0, 0.2677324759702177, 0.6485005438172303, 800, 1000, 'asymmetric', False, 1.6883081475921335, 0.10164165942338206, 2.0, 5, 357, 'asymmetric', True, 1.0146716715139248, 1.4048144274465941, 2.0, 5, 20, False, 'adagrad', 8.016442998966582e-05, 1e-05, 0.04512687533505509, 270, 800, 2.0, False, 619, 2.0, 0.0, False, 5.0, 4.415680667686682, 0.0, 0.8048918430919878, 5.0, 5.0, 5.0], [5, 88, 'cosine', False, 2.0, 1.7846664946698205, 0.0, 636, 876, 'cosine', False, 2.0, 1.888357517347064, 1.4734947586671563, 5, 498, 'asymmetric', False, 0.0, 0.0, 2.0, 5, 448, True, 'adagrad', 0.01, 0.01, 0.0001, 1000, 509, 1.9145637202991002, True, 5, 0.33828540515013844, 0.0, True, 3.4276618195766413, 1.4730803744156158, 0.0, 3.6638579395779667, 3.5582611334527665, 5.0, 0.0], [453, 226, 'dice', True, 1.8047851148674912, 1.6126272035714535, 0.4493704668010393, 628, 849, 'jaccard', False, 1.4984032967200007, 0.3338759961779934, 1.0471084060438491, 607, 438, 'cosine', False, 0.7788649213447589, 1.986596528592465, 0.6096189996297084, 316, 419, True, 'adagrad', 0.006779964664301308, 0.0066313298788708026, 0.00010156997193263094, 170, 294, 1.2137785184945409, False, 632, 1.9515952292644612, 1.063103434099596, True, 1.028022593441715, 1.5470253041996482, 3.982189800653302, 3.2720608379961873, 0.601272895899226, 4.994448862851325, 2.5942077775162287], [340, 0, 'asymmetric', True, 2.0, 0.0, 0.2798783832127761, 69, 1000, 'cosine', False, 0.8326881038966233, 0.0, 2.0, 5, 86, 'asymmetric', False, 2.0, 0.0, 1.6919992732357574, 1000, 1319, False, 'sgd', 0.01, 0.01, 0.0001, 590, 800, 1.952578874064002, False, 64, 0.7155590297435567, 0.0, False, 3.6814615657263023, 5.0, 1.8570697089100001, 2.0820027470398057, 3.7778571309917224, 5.0, 0.0], [5, 388, 'dice', False, 2.0, 0.9224013474136955, 1.7252388560855696, 800, 0, 'jaccard', True, 0.09007835150190145, 0.06806631390223764, 0.8076108213913139, 800, 1000, 'cosine', False, 1.379772625641009, 0.0, 1.8071807372742745, 1000, 20, False, 'adam', 1e-05, 0.01, 0.0006231627970837007, 5, 800, 0.0, True, 5, 0.0, 1.6292271185092353, True, 5.0, 4.689093069654449, 5.0, 2.245101880803175, 5.0, 0.03034705085769314, 3.57848575030103], [5, 1000, 'jaccard', True, 2.0, 0.0, 1.2863164447042192, 5, 590, 'asymmetric', False, 0.5943908240771778, 1.370127948774603, 0.7804555897312825, 800, 938, 'asymmetric', False, 1.349102222356458, 0.0, 2.0, 1000, 1132, True, 'sgd', 1e-05, 1e-05, 0.0001, 1000, 71, 0.2864023461595431, True, 647, 1.1394586914621139, 0.0, True, 1.5047368352284618, 3.2498749612952134, 5.0, 2.60950651756557, 5.0, 5.0, 0.0], [800, 1000, 'tversky', True, 2.0, 2.0, 0.0, 69, 0, 'dice', True, 1.8880284076462839, 0.06709362209183763, 1.1218194369909014, 206, 1000, 'cosine', False, 2.0, 2.0, 1.8162471484257257, 1000, 738, True, 'adagrad', 2.8458146314755343e-05, 0.00033275841089906824, 0.1, 1000, 403, 0.7677715366356255, False, 133, 0.0, 0.0, False, 5.0, 0.0, 5.0, 4.475352909632949, 0.36089067377690637, 1.1251358739789676, 5.0], [665, 188, 'jaccard', False, 1.4724844000080388, 1.337676487895758, 0.9105427834282578, 154, 7, 'tversky', False, 1.1597850801211433, 0.689704545899827, 0.7476458362992762, 546, 0, 'asymmetric', False, 1.9880311390633876, 1.405821570525307, 0.040894450167387825, 970, 1233, False, 'sgd', 0.007581670177774949, 0.0070184141518370765, 0.029982776389487684, 677, 791, 0.27175031935939037, True, 219, 0.06257154524369155, 1.263319567878986, False, 3.9302705406006866, 0.4604014343406201, 2.319308049143955, 4.0416878032970445, 0.08394579462963928, 1.5282948285876334, 0.15582411382768854], [152, 885, 'tversky', True, 1.6669015343468276, 0.0, 0.5844506050164889, 5, 672, 'jaccard', False, 0.09866410960518324, 2.0, 0.037645898147537105, 209, 0, 'cosine', False, 2.0, 0.0, 2.0, 5, 1500, True, 'adagrad', 1e-05, 1e-05, 0.1, 772, 5, 0.672735970070099, True, 17, 0.0, 0.0, True, 3.867512747952382, 5.0, 5.0, 0.0, 5.0, 4.04181706810318, 0.8246630957652595], [800, 0, 'asymmetric', True, 2.0, 2.0, 0.0, 800, 412, 'cosine', True, 2.0, 2.0, 0.0, 682, 1000, 'asymmetric', True, 1.843289454751032, 0.0, 1.3913488339113549, 5, 404, True, 'adam', 1e-05, 0.0006396945632499776, 0.0001, 143, 800, 2.0, True, 382, 0.0, 0.0, True, 5.0, 0.0, 1.2018824997581377, 5.0, 5.0, 0.0, 5.0], [5, 0, 'jaccard', False, 1.6586747145736866, 0.0, 0.0, 5, 0, 'asymmetric', True, 2.0, 2.0, 2.0, 800, 1000, 'dice', True, 1.4129097537808977, 0.0, 0.8124444169209069, 1000, 20, False, 'adagrad', 0.01, 0.00031806048610881417, 0.0001, 1000, 800, 2.0, False, 800, 0.0, 0.0, True, 5.0, 5.0, 5.0, 5.0, 0.0, 0.0, 2.4325707848298523], [5, 1000, 'cosine', False, 2.0, 1.4435537753104792, 0.22328804279775663, 800, 0, 'asymmetric', False, 0.0, 0.0, 2.0, 800, 1000, 'jaccard', False, 0.764593462291582, 0.0, 0.0, 1000, 1500, False, 'adagrad', 1e-05, 1e-05, 0.1, 5, 800, 0.12738344526338724, True, 800, 1.3239068855972382, 0.0, True, 5.0, 3.154448400363879, 0.0, 0.0, 5.0, 0.0, 5.0], [5, 1000, 'jaccard', True, 2.0, 0.0, 1.3815501976644429, 5, 0, 'tversky', False, 0.0, 1.0455165601651204, 2.0, 133, 1000, 'cosine', True, 0.0, 0.0, 0.9327275474516467, 1000, 1500, False, 'adam', 0.00010190815156571271, 1.4401997363958657e-05, 0.0001, 1000, 5, 0.2340824767681381, True, 552, 0.0, 0.0, False, 5.0, 5.0, 0.5902675298006186, 5.0, 5.0, 0.0, 0.0], [800, 1000, 'jaccard', False, 2.0, 0.9339508676120365, 2.0, 653, 455, 'cosine', True, 2.0, 2.0, 1.5466814750600664, 800, 998, 'cosine', True, 0.0, 1.462045199773824, 0.0, 5, 556, False, 'adagrad', 1e-05, 1e-05, 0.1, 1000, 5, 0.3422053573184035, False, 800, 0.7184885627695992, 2.0, True, 0.0, 1.2574284341731108, 5.0, 1.875249009658959, 0.0, 0.0, 5.0], [392, 507, 'cosine', True, 2.0, 0.0, 2.0, 5, 248, 'asymmetric', True, 2.0, 1.0519778029136848, 2.0, 662, 1000, 'asymmetric', True, 0.8863817875868905, 0.5777742957707896, 2.0, 1000, 20, True, 'sgd', 6.376365441185409e-05, 0.0009885704669987674, 0.0001, 832, 800, 2.0, True, 800, 0.0, 0.49856108284274836, True, 2.768177958756895, 3.282520445128733, 2.1887172764446152, 1.9318700178105863, 4.299168638116477, 0.0, 5.0], [800, 0, 'cosine', False, 1.771546070087076, 0.0, 0.0, 5, 115, 'asymmetric', True, 1.1320819089806602, 0.0, 2.0, 5, 1000, 'asymmetric', True, 1.314486562562388, 0.0, 1.161414408246157, 5, 1500, False, 'adam', 0.01, 1e-05, 0.1, 108, 516, 1.208265593270036, True, 800, 1.4733420216197335, 0.0, True, 5.0, 0.0, 0.0, 5.0, 4.820814822703211, 5.0, 2.2793714731927253], [5, 920, 'tversky', True, 1.5832383348717882, 0.0, 2.0, 5, 826, 'dice', False, 0.0, 1.3115640098687338, 0.0, 5, 1000, 'dice', True, 1.4038875243152296, 2.0, 2.0, 1000, 20, False, 'adam', 0.0006999187966328509, 1e-05, 0.0001, 280, 5, 2.0, True, 5, 0.0, 0.0, False, 5.0, 1.9527834221509357, 0.717539444137346, 0.0, 0.2513009056964963, 0.0, 3.9794563618326273], [5, 561, 'asymmetric', True, 0.0, 0.0, 0.5301225732129271, 800, 0, 'tversky', False, 2.0, 0.6896113917569641, 2.0, 557, 1000, 'asymmetric', False, 0.0, 2.0, 2.0, 245, 20, False, 'sgd', 9.909933183691925e-05, 0.00010492097706088655, 0.0001, 1000, 562, 2.0, True, 539, 0.6064729138035853, 0.7192958650174143, False, 5.0, 0.0, 0.0, 5.0, 1.4981638492919, 0.0, 0.0], [5, 1000, 'cosine', False, 0.0, 0.0, 0.0, 800, 0, 'dice', False, 1.7506719359064085, 1.6105370098699014, 2.0, 498, 1000, 'cosine', False, 1.5566734411699803, 1.705200730624524, 0.0, 5, 20, False, 'adam', 1.3737777442481287e-05, 1e-05, 0.0001, 1000, 5, 2.0, False, 800, 0.0, 0.0, True, 1.209765290122721, 5.0, 0.0, 5.0, 0.0, 0.0, 2.0879607180422335], [5, 1000, 'asymmetric', False, 0.0, 0.0, 0.768813253141686, 5, 0, 'cosine', False, 0.0, 1.6778739598367638, 1.563584513751943, 800, 234, 'asymmetric', False, 0.0, 0.1250240864086558, 0.35583635435822186, 1000, 1500, False, 'adagrad', 0.01, 0.002603482619914773, 0.0001, 1000, 599, 0.565353606915621, False, 5, 2.0, 1.4237168827080056, False, 5.0, 0.06522675494167035, 4.555561234350433, 5.0, 2.0050505147447844, 0.0, 5.0], [796, 0, 'jaccard', True, 0.0, 0.0, 1.7680567168992498, 633, 227, 'asymmetric', False, 0.3386507854077142, 2.0, 2.0, 420, 1000, 'asymmetric', True, 0.504291931317696, 0.0, 2.0, 5, 1038, False, 'adagrad', 0.001021559397160191, 1.527259446117875e-05, 0.1, 1000, 800, 0.0, False, 800, 1.9984044425825314, 1.0974278657576737, True, 5.0, 3.7627263754340423, 0.0, 0.0, 5.0, 3.0245873957952014, 4.011859857775832], [5, 575, 'asymmetric', False, 2.0, 1.4208835601736494, 0.0, 426, 723, 'dice', False, 0.42790819583089135, 0.4494701552289808, 2.0, 800, 898, 'asymmetric', False, 0.0, 0.0, 0.0, 1000, 1193, True, 'adagrad', 1e-05, 1e-05, 0.0001, 283, 800, 2.0, True, 5, 0.0, 1.0679713104997337, True, 3.330060001957593, 5.0, 3.010224209615493, 5.0, 2.8817946809058266, 0.9438572081649943, 0.11443838134328366], [793, 557, 'cosine', False, 0.19560695518198906, 0.8666891761525616, 1.0877877680665373, 165, 335, 'cosine', True, 0.3716383498191831, 1.7096245309036846, 1.9110819249536455, 370, 848, 'asymmetric', True, 0.03262363129423125, 1.4483742513120277, 1.104567414870165, 437, 981, False, 'adam', 2.545170658348607e-05, 0.0070775262133487135, 0.000253154371851436, 824, 474, 1.58044825924409, True, 185, 1.1341907357129266, 1.5692651034247214, True, 3.3222151757917544, 4.332004062741904, 1.6503407042973786, 2.81873530692405, 3.682704011780025, 2.0588854742808556, 1.6829238832763627], [5, 918, 'asymmetric', True, 0.7183335746244706, 0.192546058477192, 0.0, 5, 635, 'asymmetric', True, 2.0, 0.0, 2.0, 5, 1000, 'jaccard', False, 0.8137630111909631, 0.0, 2.0, 1000, 20, False, 'adagrad', 1e-05, 6.164618607904673e-05, 0.0001, 1000, 800, 2.0, False, 480, 2.0, 0.0, False, 5.0, 5.0, 0.009248557386323335, 5.0, 0.0, 0.0, 5.0], [5, 1000, 'dice', False, 2.0, 0.0, 0.0, 5, 1000, 'tversky', True, 0.0, 0.0, 2.0, 800, 1000, 'jaccard', False, 0.3828309283227876, 2.0, 0.0, 1000, 1464, False, 'adagrad', 1e-05, 1e-05, 0.06659561124570301, 1000, 5, 2.0, True, 800, 0.0, 0.0, False, 0.0, 5.0, 5.0, 5.0, 0.0, 0.0, 0.0], [5, 886, 'jaccard', False, 2.0, 0.8845208936548892, 0.14072216908803004, 329, 348, 'jaccard', False, 2.0, 1.7726345103685872, 2.0, 670, 1000, 'asymmetric', False, 0.0, 0.0, 2.0, 1000, 20, False, 'sgd', 1e-05, 0.0011186080733290565, 0.00011427134841885563, 1000, 800, 1.5626822671619596, True, 169, 0.0, 0.0, True, 5.0, 5.0, 0.08046311777228266, 5.0, 5.0, 2.57814034424507, 2.049224945121305], [5, 1000, 'asymmetric', False, 2.0, 2.0, 0.0, 5, 0, 'jaccard', False, 2.0, 2.0, 2.0, 5, 0, 'asymmetric', False, 0.0, 0.0, 0.0, 5, 20, False, 'sgd', 1e-05, 0.01, 0.0001, 239, 800, 2.0, True, 158, 0.0, 0.0, False, 5.0, 5.0, 0.0, 0.517347714647229, 0.004090648147981453, 5.0, 2.9369114687851288], [5, 1000, 'cosine', True, 2.0, 2.0, 0.0, 800, 0, 'asymmetric', True, 0.0, 0.0, 2.0, 800, 1000, 'jaccard', False, 1.1848224709599868, 2.0, 0.0, 1000, 20, True, 'sgd', 0.004232956037016712, 0.01, 0.1, 127, 800, 0.0, True, 560, 2.0, 0.0, False, 5.0, 0.0, 2.5687159089578033, 5.0, 0.0, 0.0, 0.0], [96, 77, 'asymmetric', True, 1.4982303043076017, 1.5728430333901064, 1.2756743099307652, 101, 196, 'jaccard', False, 1.4869210505215338, 1.4665058536791713, 1.635054475064156, 96, 651, 'asymmetric', False, 1.2908014309932183, 1.2884760185583417, 0.13165383033498193, 688, 1432, False, 'adam', 0.000769152655923747, 4.047561080129596e-05, 0.006187595595494076, 847, 716, 1.9632299981614225, True, 621, 0.6531325780938314, 0.0881679245828886, True, 3.0240274992626146, 4.912104458678558, 2.428008896905781, 0.8940927565565866, 4.88037322955829, 1.1514733680763276, 4.040280078809464], [5, 1000, 'tversky', True, 2.0, 0.0, 0.0, 800, 1000, 'dice', False, 2.0, 0.0, 0.0, 800, 1000, 'asymmetric', False, 1.0330494891479036, 0.0, 0.8864485316327574, 1000, 337, False, 'adam', 1e-05, 1e-05, 0.0001, 1000, 800, 2.0, True, 155, 0.0, 0.0, True, 3.5097959000487955, 5.0, 0.0, 0.0, 1.342097769386974, 1.3727982778906402, 5.0], [800, 1000, 'asymmetric', True, 2.0, 2.0, 0.0, 109, 1000, 'dice', False, 0.0, 0.0, 2.0, 104, 100, 'jaccard', False, 1.1771228193083678, 0.0, 2.0, 1000, 20, False, 'adam', 1e-05, 1e-05, 0.0001, 1000, 800, 2.0, False, 800, 0.0, 1.0736964419482091, False, 0.0, 0.0, 0.0, 5.0, 3.0736974371651877, 0.0, 5.0], [5, 1000, 'cosine', False, 0.0, 0.0, 1.9285312446276646, 466, 0, 'dice', True, 2.0, 0.0, 0.5257168571316744, 637, 402, 'asymmetric', True, 0.0, 0.8047621848140284, 2.0, 1000, 20, False, 'sgd', 0.01, 1e-05, 0.0001, 1000, 5, 0.0, True, 28, 0.8411272199944785, 0.0, True, 5.0, 0.0, 3.810190547469099, 0.0, 1.668524724050561, 0.0, 0.0], [5, 171, 'cosine', True, 0.0, 0.0, 1.2970202253419854, 5, 188, 'asymmetric', False, 2.0, 0.515775381806818, 1.8244633921048743, 800, 754, 'tversky', True, 0.0, 2.0, 0.0, 1000, 373, False, 'adam', 0.0013788120840378794, 0.01, 0.1, 1000, 785, 2.0, False, 5, 2.0, 0.0, True, 5.0, 4.74539861042881, 5.0, 0.0, 0.0, 1.4086579660670968, 5.0], [800, 0, 'dice', False, 1.2625264114143049, 0.0, 0.0, 800, 1000, 'cosine', True, 2.0, 2.0, 2.0, 800, 1000, 'asymmetric', False, 0.0, 2.0, 0.0, 5, 20, False, 'adagrad', 1e-05, 0.01, 0.0009756468888010365, 5, 800, 0.3557171973224232, True, 5, 0.0, 0.0, True, 0.0, 3.7841637238878607, 3.8411186601411758, 0.0, 2.687325919202033, 3.0355346126236658, 1.8095294833956974], [800, 130, 'dice', False, 2.0, 0.06645449914150482, 0.0, 124, 1000, 'jaccard', False, 2.0, 1.4568982966977921, 1.1915570273797769, 800, 1000, 'tversky', True, 0.8403440634469317, 2.0, 0.0, 5, 20, False, 'adagrad', 1e-05, 0.01, 0.0016383008979062898, 481, 800, 0.0, True, 5, 0.0, 0.0, True, 2.5802194484369156, 0.0, 5.0, 2.7268466077091325, 0.6702145369478825, 1.9862766182019822, 5.0], [5, 0, 'jaccard', True, 2.0, 0.6281007415962541, 2.0, 703, 0, 'asymmetric', True, 2.0, 2.0, 0.0, 800, 1000, 'cosine', True, 0.9070525356591547, 2.0, 0.0, 5, 20, True, 'adagrad', 1e-05, 0.01, 0.003406797320323424, 1000, 800, 2.0, False, 800, 2.0, 0.0, True, 0.0, 5.0, 1.5656420367109076, 0.0, 0.0, 5.0, 0.0], [5, 1000, 'dice', False, 0.0, 0.0, 2.0, 270, 9, 'asymmetric', True, 2.0, 0.0, 0.0, 800, 185, 'asymmetric', False, 1.371958671609733, 2.0, 0.269886746616015, 1000, 422, False, 'adagrad', 0.00032106668147364927, 0.01, 0.0001, 767, 5, 0.0, True, 5, 0.0, 0.0, True, 2.0621382985762438, 2.7149418748345386, 5.0, 5.0, 0.0, 0.0, 1.8569163409334806], [49, 981, 'jaccard', False, 0.0, 0.0, 0.0, 800, 1000, 'jaccard', True, 2.0, 0.0, 2.0, 800, 374, 'asymmetric', True, 1.6637623257384657, 0.0, 0.09861633526321152, 1000, 20, False, 'adam', 0.0020095543048532327, 0.01, 0.0001, 1000, 800, 2.0, True, 5, 2.0, 0.0, True, 5.0, 5.0, 5.0, 0.0, 0.0, 0.0, 5.0], [462, 0, 'jaccard', False, 0.0, 0.0, 2.0, 5, 1000, 'jaccard', True, 2.0, 2.0, 0.0, 5, 314, 'jaccard', True, 2.0, 0.0, 2.0, 5, 1500, False, 'adagrad', 1.734886366126199e-05, 0.0003892104895478296, 0.0001, 1000, 5, 2.0, False, 5, 2.0, 0.0, True, 2.1056227756549006, 5.0, 0.0, 0.0, 5.0, 5.0, 5.0]]
