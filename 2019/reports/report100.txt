          fun: -0.03724889564460299
    func_vals: array([-0.0287064 , -0.02354078, -0.02803234, -0.0209413 , -0.0227867 ,
       -0.03300388, -0.02791544, -0.02612343, -0.0297018 , -0.02666089,
       -0.02748581, -0.03461773, -0.0311828 , -0.03371026, -0.03103872,
       -0.02569593, -0.02371052, -0.02708165, -0.02977812, -0.02754776,
       -0.02000338, -0.03359686, -0.02854918, -0.02575153, -0.02943101,
       -0.0331655 , -0.02945088, -0.03142863, -0.03055229, -0.02918285,
       -0.02545466, -0.02313876, -0.03316319, -0.03139938, -0.01389902,
       -0.0372489 , -0.03191823, -0.02688847, -0.02880171, -0.01120821,
       -0.01917863, -0.02959307, -0.03365503, -0.03010005, -0.02128782,
       -0.031075  , -0.02333118, -0.02144896, -0.01239582, -0.02989481,
       -0.03218306, -0.0286449 , -0.03166393, -0.02612365, -0.01867323,
       -0.02798294, -0.03059691, -0.03278194, -0.03234463, -0.02325529,
       -0.03668559, -0.01538103, -0.02071142, -0.03043133, -0.033689  ,
       -0.03120007, -0.02586424, -0.02766255, -0.03435674, -0.02946039])
       models: [GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5) + WhiteKernel(noise_level=1e-05),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290)]
 random_state: RandomState(MT19937) at 0x1072C7C00
        space: Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       ...,
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=1000),
       Categorical(categories=(1500,), prior=None),
       Categorical(categories=(True, False), prior=None),
       Categorical(categories=('sgd', 'adagrad', 'adam'), prior=None),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=0.0001, high=0.1, prior='log-uniform', transform='normalize'),
       Integer(low=5, high=1000),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize')])
        specs: {'args': {'func': <bound method Optimizer.evaluate of <__main__.Optimizer object at 0x11412ae90>>, 'dimensions': Space([Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       Integer(low=0, high=1000),
       Categorical(categories=('cosine', 'jaccard', 'asymmetric', 'dice', 'tversky'), prior=None),
       Categorical(categories=(True, False), prior=None),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=800),
       ...,
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Real(low=0, high=2, prior='uniform', transform='normalize'),
       Integer(low=5, high=1000),
       Categorical(categories=(1500,), prior=None),
       Categorical(categories=(True, False), prior=None),
       Categorical(categories=('sgd', 'adagrad', 'adam'), prior=None),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=1e-05, high=0.01, prior='log-uniform', transform='normalize'),
       Real(low=0.0001, high=0.1, prior='log-uniform', transform='normalize'),
       Integer(low=5, high=1000),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize'),
       Real(low=0, high=5, prior='uniform', transform='normalize')]), 'base_estimator': GaussianProcessRegressor(alpha=1e-10, copy_X_train=True,
                         kernel=1**2 * Matern(length_scale=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], nu=2.5),
                         n_restarts_optimizer=2, noise=1e-05, normalize_y=True,
                         optimizer='fmin_l_bfgs_b', random_state=2106195290), 'n_calls': 70, 'n_random_starts': 20, 'acq_func': 'gp_hedge', 'acq_optimizer': 'auto', 'x0': None, 'y0': None, 'random_state': RandomState(MT19937) at 0x1072C7C00, 'verbose': True, 'callback': None, 'n_points': 10000, 'n_restarts_optimizer': 10, 'xi': 0.01, 'kappa': 1.96, 'n_jobs': -1}, 'function': 'base_minimize'}
            x: [30, 56, 'asymmetric', True, 0.6599609759159238, 0.8173624832240958, 0.18694499695219727, 309, 810, 'dice', False, 0.06296343185685262, 0.8912482067490604, 0.1478657805022863, 158, 816, 'asymmetric', True, 1.791766210561791, 0.17745394383013416, 1.1794441251082355, 433, 1500, False, 'adagrad', 0.00014846788775948298, 5.3658185438518884e-05, 0.004296818192974266, 649, 4.788149531158417, 0.5352507794267048, 4.9648185615891895, 2.181068924113327, 4.7931831840382815]
      x_iters: [[93, 466, 'dice', False, 1.12138543647843, 1.6150324276526589, 0.6103933677045535, 551, 190, 'tversky', True, 1.4637059736305322, 0.1028615922028431, 1.9980099905003217, 56, 171, 'dice', False, 0.7149484111505456, 0.5315940763372135, 0.11295054233324445, 125, 1500, True, 'adam', 0.001104667959208931, 0.007863312591962907, 0.00019033078445118557, 15, 1.1010448548497478, 0.4384634375463659, 2.126994554453532, 2.988611601701303, 4.2339967910300444], [256, 746, 'jaccard', True, 1.0585886569687128, 1.322110448337495, 1.8049284697568346, 354, 503, 'asymmetric', False, 1.8840857467839967, 1.4775017891845372, 1.9936420258079037, 469, 166, 'tversky', False, 1.5689092877068058, 0.7461680195384434, 0.7233775743840122, 286, 1500, False, 'adam', 0.002528815916114456, 4.6818666315224036e-05, 0.09299220939853675, 51, 0.7296186602886774, 3.711542627659536, 4.24839397568601, 4.225073332506639, 3.314394170566595], [359, 899, 'dice', False, 0.1308603437770466, 0.5658067032993394, 1.2449730106518042, 546, 763, 'asymmetric', True, 1.347408941185851, 0.6903987873989487, 0.5823792424646207, 131, 814, 'jaccard', True, 0.45627283667196095, 1.703544990646465, 1.921176371360653, 453, 1500, True, 'adam', 0.0006745392120239503, 0.00784732635436433, 0.0020346926328348946, 436, 1.682846664525092, 1.292428973386789, 0.7985703199608242, 1.2020818021003123, 0.5292854490860234], [708, 907, 'tversky', True, 0.20833227675661786, 1.897736150114684, 1.7691688098570948, 371, 276, 'dice', False, 0.1676730643444835, 0.24972582188548237, 1.93349005929764, 12, 377, 'dice', False, 0.7646498613294574, 1.3923244289318069, 0.9283511714956649, 841, 1500, True, 'sgd', 0.0003287231113749425, 0.00012404181294849555, 0.009050796116390312, 678, 4.681999373667444, 1.7725889478072974, 1.8965606509409128, 0.9469447155887969, 1.0757575908655324], [174, 297, 'cosine', False, 0.4528021296837824, 0.722457928061559, 0.7334182098940584, 740, 516, 'dice', True, 1.6017053244424004, 0.6485368374861594, 0.7926927689881171, 500, 30, 'cosine', True, 0.42258159962428643, 0.8959864318579482, 1.8940655260330848, 735, 1500, True, 'sgd', 0.0002938216632683642, 0.0003468538581264594, 0.0038298860739689336, 397, 1.1149291374142998, 0.3011453637775086, 2.222415445352471, 4.3487391998935445, 1.4469968973268985], [341, 932, 'cosine', True, 0.7094890837340416, 0.36312353637302813, 0.23122873479830336, 716, 670, 'dice', True, 0.18831837886364072, 1.3277268406648048, 1.4035504114053454, 619, 38, 'tversky', True, 0.36110397869800065, 0.8181812088238687, 1.3912149680907537, 943, 1500, True, 'adagrad', 2.3027109491057024e-05, 0.00038897716305045816, 0.00033453671211558663, 794, 4.178385854713932, 2.406566528495622, 3.7912736903797253, 3.3267388114693706, 1.0131407335359912], [294, 538, 'jaccard', True, 1.260101677028421, 1.4659365859335083, 0.6711551556955492, 338, 847, 'jaccard', False, 1.7684917818858477, 1.2713323919997317, 0.486186547813673, 502, 303, 'tversky', True, 0.1144986861265829, 1.5572472247492253, 1.3150361863038647, 425, 1500, False, 'sgd', 0.006291414737062814, 0.00047472300115267233, 0.0006035898129268117, 123, 3.6447846613889823, 0.02135128618639182, 1.888120397923669, 4.708577285939381, 1.5965159718371555], [580, 374, 'jaccard', True, 1.7489656901666866, 0.978570824650163, 0.019578564354336473, 115, 324, 'jaccard', False, 0.6795563467117457, 0.8211417457819281, 1.8298709146268233, 109, 622, 'tversky', False, 1.6316296023342471, 0.18963337823394527, 1.5185427262535378, 213, 1500, False, 'adagrad', 2.4560997649697146e-05, 0.0015862767525483775, 0.0982353723129544, 734, 0.670900677275343, 0.8382022915451643, 1.0128412692001085, 3.999003295513053, 4.686706849900098], [672, 730, 'jaccard', False, 1.5514007577148474, 0.8779720566933156, 0.8307189385897493, 614, 624, 'tversky', True, 0.7981104123208878, 0.36867771522621734, 0.7883118156222131, 772, 875, 'dice', False, 0.4912370475755795, 1.0189506989737092, 0.7378104025148243, 633, 1500, False, 'sgd', 0.00026392416835152214, 0.0001494511151126229, 0.0011950391201353938, 565, 3.467081742380799, 0.08123399402440558, 2.6715609485382537, 0.9265193719791244, 3.0227036631576003], [42, 63, 'cosine', True, 0.22534674893865386, 1.0148715667668795, 1.9395883220157037, 440, 91, 'dice', True, 0.39908608058447215, 0.5142623525824813, 0.9012397023941363, 303, 7, 'cosine', False, 1.0599145941363255, 1.4287029340128206, 1.1220050762240041, 699, 1500, False, 'sgd', 0.00028089965976614784, 0.008565285185313295, 0.010721430004966026, 59, 0.418540663703208, 1.854279247845587, 1.0751631986846641, 2.0536671844823817, 2.9950279652132297], [255, 351, 'asymmetric', True, 0.08125775133341763, 0.1808113095740698, 1.4637855244535511, 93, 796, 'cosine', True, 0.9900250414018921, 0.14679948166736148, 1.6873598154135083, 349, 982, 'tversky', True, 0.009750937568659081, 0.3850042879733139, 0.9357357757303013, 657, 1500, True, 'adagrad', 8.876885539552815e-05, 0.001357692855829564, 0.031958620690796656, 94, 4.293354250633125, 4.214238525519647, 1.0493660246591965, 4.3729698406456645, 2.031924551317834], [196, 308, 'tversky', False, 0.5485073036794251, 1.6701943265371049, 1.4760321638948055, 59, 868, 'asymmetric', False, 1.7922698378321067, 0.34181922464341713, 0.6302920375946967, 356, 178, 'cosine', True, 0.4841666558198755, 0.7912299660342834, 1.4227131638858947, 207, 1500, True, 'adagrad', 0.0006729765751834586, 0.00019966209403707378, 0.0006490716988140133, 571, 4.647682220742742, 4.095918099182423, 3.037190076883809, 0.7904103371221461, 2.7390796770504044], [633, 104, 'cosine', False, 1.9455972789901377, 0.7958901343280131, 1.8560408034118563, 434, 438, 'dice', True, 1.3902508367715276, 0.5003947040408071, 0.4525419639716034, 322, 920, 'tversky', False, 0.3017039668630142, 1.747295992487835, 1.1647367224162537, 979, 1500, False, 'adagrad', 0.00019829474721661184, 3.1560742091018385e-05, 0.003202674523886382, 373, 0.9689619901104105, 4.059479438017232, 1.4936868553061913, 4.895213568448896, 3.7436001158647247], [428, 191, 'dice', True, 0.09981284125561965, 0.3978199410690263, 1.8750738980266985, 756, 83, 'cosine', True, 1.5028462603520596, 1.5639585938499572, 0.21398040344567032, 239, 463, 'asymmetric', False, 0.9067559002660548, 1.2943426306410388, 1.6274961246655821, 416, 1500, True, 'adagrad', 0.0003196596426955208, 0.0016468859923684765, 0.017933882181689925, 306, 2.1632702212716493, 2.662156551630892, 3.5337414882485008, 0.5875981717347557, 1.756399460627862], [467, 487, 'jaccard', True, 1.4976175720915264, 1.962822792961017, 1.25852634970176, 104, 281, 'cosine', True, 0.7173373110611222, 1.866641619564488, 0.8900350581124536, 617, 775, 'dice', False, 1.6273151708015954, 0.8319912285973892, 0.7644650437169678, 384, 1500, False, 'sgd', 0.0007570283744029695, 0.0014529866964494713, 0.0001884094144086375, 701, 1.323020169666672, 1.1329815619381947, 4.446913129099186, 3.8668523884996557, 4.715962914029694], [368, 194, 'asymmetric', True, 0.5247943072821769, 0.8549299632129055, 1.8982488803703443, 419, 954, 'jaccard', True, 1.273936005945833, 1.2195545220419373, 1.9276422750992808, 373, 975, 'asymmetric', True, 1.2207183333354727, 0.2880084419110192, 1.652445552476883, 967, 1500, True, 'adagrad', 1.6274779349002553e-05, 0.0016697498344484067, 0.04566682780407984, 634, 3.142023734718272, 1.5599564095350895, 0.5910167658629735, 2.920351045470402, 0.13129490879467356], [305, 767, 'tversky', False, 1.0888909370211672, 1.8885392285237856, 0.8148235363449194, 335, 282, 'asymmetric', False, 0.1944629858929881, 0.4151387863608441, 1.6068011904767927, 493, 453, 'dice', True, 1.0082921689196918, 0.28355229077535965, 1.4471181823423171, 629, 1500, False, 'adagrad', 0.0032520656318755516, 0.0005757372652416815, 0.0001218886246322957, 166, 1.10915162674993, 0.5683089465913639, 4.021017178531713, 0.3710005053105337, 4.478723851623679], [668, 784, 'cosine', False, 0.22634943559652615, 1.2289316996371944, 0.2547352482468133, 27, 570, 'asymmetric', True, 0.2509853747845015, 0.09011380739518861, 0.117596559088647, 200, 308, 'asymmetric', False, 1.5249245817022627, 1.2958938399701485, 0.7419986776769386, 155, 1500, True, 'adam', 0.00018400650941697062, 1.946221731941581e-05, 0.007704083184792994, 904, 3.5938962427919554, 1.4454650296027092, 2.108963947599584, 4.510886613333084, 3.3812748455083974], [60, 237, 'tversky', False, 1.5412230021114688, 1.3115866799276938, 1.3016384335617335, 490, 530, 'cosine', True, 1.1819054939450488, 0.3443883317404984, 0.9043531945802843, 493, 73, 'dice', False, 1.764844398932054, 0.27782386075124693, 1.139212524568401, 580, 1500, True, 'adagrad', 0.00024731783294866056, 0.00540484428947813, 0.03138113426755255, 760, 2.741083323320135, 3.2178858194181843, 4.113723022853115, 1.360356983908961, 2.3258678513060085], [508, 856, 'tversky', True, 1.6119047330201033, 1.4375297499047408, 1.8094014115738009, 9, 919, 'asymmetric', True, 0.7485474887383644, 0.5008768818335397, 1.2156651335065236, 779, 217, 'tversky', False, 1.6578298519088495, 0.8523892705576328, 1.8255650256527418, 34, 1500, True, 'adam', 0.00015974010902072313, 1.1149762880910681e-05, 0.0954941643496701, 182, 0.2624289024534305, 0.861662683010972, 3.3901235273162604, 3.1619924195699984, 2.8975838381383885], [800, 0, 'dice', True, 2.0, 2.0, 2.0, 5, 789, 'tversky', True, 2.0, 2.0, 0.0, 800, 1, 'cosine', True, 1.3096472381579096, 1.7375368808942884, 0.0, 5, 1500, True, 'adagrad', 1.6556613585279033e-05, 0.01, 0.0001, 1000, 5.0, 5.0, 3.903252389446543, 5.0, 0.0], [5, 1000, 'jaccard', False, 0.2083225232352547, 0.0, 2.0, 800, 747, 'cosine', True, 1.8130449916189726, 2.0, 0.0, 292, 463, 'tversky', True, 0.0, 0.22520900820422393, 0.0, 5, 1500, True, 'adam', 1e-05, 1e-05, 0.0001, 1000, 4.864818607404682, 5.0, 5.0, 0.0, 5.0], [5, 22, 'tversky', True, 2.0, 0.0, 0.0, 581, 768, 'dice', True, 0.0, 2.0, 0.0, 800, 1000, 'jaccard', False, 0.0, 1.0689566208108203, 2.0, 210, 1500, True, 'adam', 0.01, 1e-05, 0.0001, 5, 5.0, 3.537457268306433, 2.7581044571750093, 0.0, 5.0], [800, 1000, 'cosine', False, 2.0, 2.0, 0.0, 5, 1000, 'cosine', True, 2.0, 1.5508048190834787, 0.14331284084043314, 5, 986, 'jaccard', False, 0.0, 2.0, 1.0933297431047284, 950, 1500, False, 'adam', 1e-05, 1e-05, 0.0001, 240, 1.3948434051682213, 0.0, 5.0, 0.0, 0.0], [274, 619, 'cosine', True, 0.09119295428347775, 0.11024685709972373, 0.1372851461162348, 556, 936, 'jaccard', False, 1.8255095669006745, 1.0018629476067016, 0.4272630732951862, 512, 363, 'dice', False, 1.462211232299788, 1.4591673765640465, 1.0951784933176267, 209, 1500, False, 'adagrad', 0.0017574094355412278, 0.0029671434448272777, 0.001974560499748698, 833, 2.0601792550088858, 0.08422172591889877, 2.0052429596834416, 0.09711947157115487, 4.771061425991476], [5, 1000, 'jaccard', False, 2.0, 0.0, 2.0, 800, 83, 'cosine', True, 0.0, 0.0, 0.0, 800, 913, 'tversky', False, 0.0, 0.9932222506693498, 2.0, 223, 1500, False, 'adagrad', 0.01, 0.01, 0.0001, 1000, 5.0, 5.0, 4.29879036142206, 1.6744663528490218, 5.0], [5, 1000, 'jaccard', False, 1.8353852037419862, 0.0, 0.0, 800, 1000, 'cosine', True, 0.03881748289537933, 1.6195282649784455, 0.0, 5, 960, 'asymmetric', False, 0.0, 2.0, 2.0, 1000, 1500, True, 'adagrad', 1e-05, 0.01, 0.00017248333862926663, 5, 5.0, 5.0, 5.0, 0.7754862526993861, 5.0], [186, 203, 'dice', False, 0.24197510342728368, 0.2752466333810603, 1.2431396642990784, 456, 667, 'cosine', False, 0.39053504631742375, 0.2501963133123257, 1.1999225507540852, 503, 66, 'jaccard', False, 0.5910842931043546, 0.9176154238017862, 0.3062788277712914, 523, 1500, False, 'adagrad', 0.005896918239823451, 1.8457033944790246e-05, 0.0001825903324446042, 979, 0.977605295019323, 2.7948787455848563, 1.3853586254896615, 4.380536848016579, 4.304273228650002], [327, 457, 'tversky', False, 0.37022909156354594, 0.09461024501625276, 0.9896140291332898, 19, 3, 'tversky', True, 0.3605720734805934, 1.565530943185387, 0.3034649586998969, 157, 999, 'tversky', True, 1.7674546280263137, 0.21009578366748222, 1.9125924074668081, 893, 1500, False, 'adagrad', 0.00011125569261693075, 2.4136054935724217e-05, 0.006403399732993784, 358, 1.5252606136363425, 3.53010381934265, 0.4452356006556317, 3.642183716041543, 4.922015712870235], [287, 842, 'asymmetric', False, 1.8208965499268266, 0.007547060987412204, 0.9412872816972846, 196, 544, 'cosine', True, 1.505161072060428, 0.9008377666367386, 1.482472478620403, 111, 960, 'asymmetric', True, 1.9144309999031288, 0.21007672493177681, 1.615388971537849, 180, 1500, False, 'sgd', 1.7154674304260675e-05, 1.0785325764546736e-05, 0.00012971265976579447, 759, 0.9769795272019524, 1.0270613117269953, 1.8761351396545978, 1.411280840539568, 0.0736002848957379], [18, 295, 'cosine', False, 0.13561067405511887, 0.05802086782387052, 1.8920436109153278, 38, 5, 'asymmetric', False, 0.5344241338191557, 0.559331023085449, 0.7754725116117018, 617, 479, 'jaccard', False, 0.9518811069907702, 0.2382785450317853, 0.09781002113446483, 532, 1500, True, 'sgd', 6.297194118813869e-05, 0.0020549252201545994, 0.00018281226307585022, 344, 1.5350298526078645, 4.433691741154833, 4.867626149087438, 3.8073972835905585, 0.13779829649072597], [68, 514, 'dice', False, 1.7794122986062206, 0.6577664372821096, 1.8852490047169645, 617, 820, 'cosine', False, 1.9828830144108496, 1.7390680412872632, 1.537480767881428, 497, 26, 'tversky', True, 1.450086918838084, 1.5424135448674814, 1.4962925013623545, 792, 1500, True, 'sgd', 0.002036209014357918, 0.0006265075707806532, 0.0045798765519788455, 971, 1.9907464682009612, 2.4190703252491113, 1.9186032161271216, 1.4095584499232297, 4.717502315906926], [454, 515, 'asymmetric', False, 1.005228450809469, 0.10965136834993297, 1.2610992903804128, 782, 322, 'dice', True, 0.11526012239080122, 1.107467675070815, 0.7911494319970318, 39, 55, 'dice', True, 1.438734871290829, 1.9807627704616009, 0.16615236567422656, 121, 1500, False, 'adagrad', 0.003589293925601994, 2.9752543968848473e-05, 0.0059659438431370225, 253, 3.274494329910203, 4.0047331831930855, 4.877916687525187, 0.9245934988876049, 4.878393795123411], [578, 816, 'tversky', False, 1.9701369356151286, 0.053943930620259165, 1.6704916129918332, 634, 910, 'jaccard', True, 1.8675101631730886, 0.18226471468945318, 0.12794825040329097, 54, 974, 'cosine', False, 0.6900885080167202, 1.9755106428203237, 0.09495760423487323, 592, 1500, False, 'adagrad', 0.00015983618961874674, 0.00018496052393239784, 0.0002312067660822983, 160, 2.963466120825069, 0.03579812732813104, 4.4906044644158545, 4.476425792182941, 1.2314222607525869], [800, 983, 'jaccard', False, 0.0, 0.0, 0.0, 800, 0, 'asymmetric', True, 2.0, 0.0, 0.0, 5, 375, 'dice', False, 0.0, 0.0, 0.0, 165, 1500, False, 'adagrad', 0.00016102806615584037, 1e-05, 0.0001, 1000, 0.0, 5.0, 0.01376534407580482, 2.712579531803999, 5.0], [30, 56, 'asymmetric', True, 0.6599609759159238, 0.8173624832240958, 0.18694499695219727, 309, 810, 'dice', False, 0.06296343185685262, 0.8912482067490604, 0.1478657805022863, 158, 816, 'asymmetric', True, 1.791766210561791, 0.17745394383013416, 1.1794441251082355, 433, 1500, False, 'adagrad', 0.00014846788775948298, 5.3658185438518884e-05, 0.004296818192974266, 649, 4.788149531158417, 0.5352507794267048, 4.9648185615891895, 2.181068924113327, 4.7931831840382815], [86, 56, 'tversky', False, 0.8829805743993187, 1.413874120476037, 1.9530241196220606, 635, 796, 'cosine', True, 0.06522831571238542, 1.7201566032265563, 0.5060511800731277, 738, 771, 'cosine', True, 0.20313945850340615, 1.956891738569579, 0.22912450210875873, 583, 1500, False, 'adagrad', 0.0005138295687464315, 0.00022438332201419112, 0.025001424708696852, 382, 4.799746676345613, 0.0025460971594842845, 4.481124822789338, 2.6379253806955276, 2.9402164915212667], [5, 42, 'asymmetric', False, 0.0, 0.0, 2.0, 5, 0, 'tversky', True, 0.0, 0.0, 0.0, 629, 597, 'tversky', False, 2.0, 1.199909232991861, 2.0, 788, 1500, True, 'adam', 0.01, 1e-05, 0.1, 1000, 5.0, 0.0, 5.0, 0.12124892230153655, 0.0], [5, 823, 'cosine', True, 0.0, 1.7338358954598254, 2.0, 5, 1000, 'cosine', True, 0.0, 1.185073172364006, 1.0312992946754023, 5, 1000, 'jaccard', True, 0.9093335956674311, 0.0, 0.0, 5, 1500, False, 'adagrad', 1.0625277196413032e-05, 1e-05, 0.003959096065495437, 5, 5.0, 0.0, 5.0, 0.0, 5.0], [22, 771, 'dice', False, 1.3653929992383078, 1.984235032369921, 0.07295766506287517, 698, 417, 'dice', False, 0.6417002674491671, 1.5845230773636305, 0.07475081974876897, 721, 598, 'asymmetric', True, 1.9751209917287431, 0.3178141483013555, 1.7724825015309842, 13, 1500, False, 'adagrad', 0.003990391451528236, 0.00037751755546971207, 0.09365223644565962, 130, 3.727371828277981, 0.2751661620333235, 4.976498567353065, 4.915842457754788, 4.826038476868071], [800, 0, 'dice', False, 2.0, 0.0, 0.0, 5, 1000, 'cosine', False, 0.0, 2.0, 0.0, 128, 0, 'cosine', True, 0.0, 2.0, 0.0, 1000, 1500, False, 'adagrad', 0.01, 1e-05, 0.0001, 1000, 5.0, 5.0, 5.0, 5.0, 5.0], [800, 0, 'cosine', True, 2.0, 0.0, 2.0, 284, 1000, 'cosine', False, 2.0, 0.9046208266071802, 0.0, 800, 652, 'cosine', True, 2.0, 2.0, 0.0, 393, 1500, False, 'adagrad', 6.407976848879415e-05, 0.01, 0.0001, 771, 5.0, 5.0, 3.6675582823639425, 5.0, 5.0], [5, 443, 'asymmetric', False, 2.0, 0.0, 1.5684571180608908, 5, 1000, 'dice', False, 2.0, 2.0, 0.19436080094622626, 800, 1000, 'tversky', False, 0.6125782980816614, 0.0, 0.33176556803168755, 5, 1500, False, 'sgd', 0.00010161205336357791, 0.01, 0.1, 1000, 5.0, 5.0, 5.0, 0.03716743539163298, 2.3300926502136714], [800, 736, 'dice', True, 0.0, 0.0, 2.0, 621, 0, 'cosine', True, 1.2520964434050743, 2.0, 0.0, 5, 282, 'tversky', False, 0.44068936563732664, 2.0, 0.0, 1000, 1500, True, 'adam', 1e-05, 2.0843422274651397e-05, 0.1, 1000, 0.0, 5.0, 0.0, 0.0, 0.0], [103, 0, 'cosine', False, 0.0, 0.0, 2.0, 800, 1000, 'cosine', True, 0.0, 0.2934908541822807, 0.7170132418860047, 5, 1000, 'asymmetric', False, 2.0, 1.5297409146799879, 0.0, 5, 1500, False, 'sgd', 1e-05, 0.01, 0.0001, 158, 0.0, 0.0, 0.24134096724876036, 0.0, 4.397846334726789], [82, 248, 'tversky', True, 1.4345446040683938, 0.37941254221100296, 1.9126167905463138, 182, 526, 'tversky', True, 0.7525731530303572, 1.9738698011188889, 1.7260732333821673, 292, 668, 'jaccard', False, 1.757522244818387, 1.366014872328003, 1.9434342268828335, 703, 1500, False, 'adagrad', 0.00013738957650814338, 0.005481821407431332, 0.017734426056446737, 950, 1.1611909034400767, 0.5474907121817736, 3.023617669733769, 0.16156921513192815, 4.715185157374331], [5, 0, 'tversky', True, 1.3833976376883128, 0.0, 2.0, 280, 219, 'jaccard', True, 2.0, 0.0, 2.0, 11, 1000, 'tversky', True, 0.0, 1.423711923110937, 0.9317680341374603, 1000, 1500, False, 'adam', 1e-05, 0.01, 0.0001, 1000, 5.0, 5.0, 5.0, 0.0, 0.0], [5, 534, 'asymmetric', True, 2.0, 0.0, 2.0, 690, 852, 'cosine', True, 0.47196341222209476, 2.0, 0.0, 662, 981, 'cosine', False, 0.0, 2.0, 0.44007471837270357, 5, 1500, True, 'adagrad', 1.189762642868646e-05, 0.01, 0.0001, 921, 0.0, 0.0, 3.2937934080635096, 0.0, 5.0], [800, 0, 'dice', True, 0.0, 1.5723078124355037, 0.0, 5, 0, 'jaccard', True, 2.0, 2.0, 2.0, 649, 1000, 'dice', True, 0.0, 0.5820708411415679, 2.0, 5, 1500, False, 'adagrad', 0.00031955718500614136, 0.01, 0.0001, 5, 0.0, 5.0, 5.0, 5.0, 4.998248275425226], [5, 0, 'asymmetric', False, 2.0, 2.0, 0.0, 234, 643, 'cosine', True, 0.8451604090538156, 1.2634370078470534, 0.0, 800, 1000, 'tversky', True, 2.0, 2.0, 2.0, 5, 1500, False, 'adagrad', 0.0007775722345880482, 1e-05, 0.0017537697941930658, 1000, 3.6986407175248948, 5.0, 5.0, 0.0, 5.0], [174, 216, 'dice', False, 1.6644531711375086, 1.0138838490305437, 1.2529018339998887, 711, 533, 'cosine', False, 0.5630680111954961, 1.991496269043524, 1.6211344826313576, 82, 347, 'jaccard', False, 0.30305036649226846, 1.4921651037390915, 0.8781173189329744, 92, 1500, False, 'sgd', 0.006248337562482495, 0.0010074779867653458, 0.00012111444595265953, 409, 4.545875527577514, 1.5360729915219138, 0.03630126502960839, 2.2137092020984532, 0.48526406465963023], [65, 598, 'dice', True, 0.41435123772141924, 0.6359082647615187, 0.7678840185896223, 440, 939, 'jaccard', True, 0.5101632584570533, 0.8426313526018816, 1.213169666797625, 505, 940, 'jaccard', False, 1.4805317642629672, 0.031046635068658686, 1.667226087566126, 566, 1500, False, 'adam', 2.5571912466320072e-05, 0.008584915392262183, 0.049635609691112845, 857, 4.802327088664981, 0.2703228101267408, 0.5208960721577256, 0.04679042499974862, 2.923963650842072], [91, 646, 'jaccard', True, 1.0434184470660628, 0.0, 0.0, 537, 55, 'asymmetric', True, 0.0, 2.0, 0.0, 800, 0, 'asymmetric', False, 2.0, 0.12750872958899967, 0.0, 5, 1500, False, 'adagrad', 1e-05, 3.95322534489845e-05, 0.031243139761494735, 1000, 4.5272590243896715, 1.1062085509732877, 0.0, 0.0, 0.0], [385, 0, 'asymmetric', False, 2.0, 0.0, 2.0, 417, 943, 'cosine', False, 0.9789727926655646, 0.5449272228670369, 1.2106484022095794, 800, 800, 'asymmetric', False, 2.0, 0.0, 0.2908171305507734, 5, 1500, False, 'adam', 0.007508118925321212, 1e-05, 0.0007682629791654015, 258, 5.0, 0.0, 4.931351052729454, 0.0, 0.0], [5, 0, 'asymmetric', True, 0.0, 0.0, 2.0, 40, 1000, 'cosine', True, 0.07287268726500848, 0.0, 0.0, 800, 0, 'asymmetric', False, 0.8513056957714009, 1.1087574834435954, 1.7239910295521892, 5, 1500, False, 'adagrad', 1e-05, 0.01, 0.0001, 1000, 3.2565331419509262, 5.0, 0.0, 3.8821726690702314, 5.0], [302, 616, 'tversky', False, 0.6937407230133145, 1.5013339919426885, 0.6187890962421992, 666, 701, 'cosine', True, 1.9893043050514942, 0.36293597948459727, 0.010795198069388336, 111, 914, 'jaccard', False, 0.9794236496425512, 0.006040070482677963, 0.27513588874029954, 786, 1500, False, 'adagrad', 0.001786388961316394, 0.0006619640906840647, 0.0047058191809961425, 76, 4.793602737953304, 0.3010322319682413, 0.2973772265153208, 0.26291079876743234, 4.994046758968812], [5, 1000, 'cosine', False, 2.0, 0.0, 2.0, 800, 769, 'cosine', True, 2.0, 1.5882693383921158, 2.0, 5, 0, 'jaccard', False, 2.0, 2.0, 1.5745544549125465, 1000, 1500, False, 'adagrad', 0.0012451420874947418, 1e-05, 0.1, 5, 5.0, 1.5191663526867383, 0.0, 0.0, 0.37495258139250753], [5, 905, 'jaccard', False, 2.0, 0.0, 2.0, 800, 1000, 'dice', False, 0.0, 0.4227506798999203, 1.038362334342, 5, 895, 'jaccard', False, 2.0, 0.8204851944994657, 0.0, 1000, 1500, True, 'sgd', 0.01, 1e-05, 0.014331536188674512, 683, 5.0, 0.0, 0.0, 0.0, 0.0], [102, 5, 'tversky', True, 1.7424830037878156, 0.6555900950526522, 0.42895035675947313, 780, 35, 'asymmetric', True, 0.26852626072432534, 1.3755236986961945, 1.4239220424572268, 24, 821, 'tversky', False, 1.237015982273575, 0.5061078320995255, 1.9421730065562803, 377, 1500, True, 'sgd', 4.832212072948108e-05, 0.00028487758536883425, 0.00026176578222822177, 152, 3.586814584405789, 4.441908761208423, 3.5657532740776885, 0.05411776655052159, 0.15498170644898615], [768, 585, 'jaccard', True, 0.42269397827211763, 0.40231707034795783, 0.9706014867464943, 182, 125, 'tversky', True, 1.6407752219654719, 1.6428098298370508, 0.7348226552724281, 743, 843, 'tversky', False, 1.7916187245659538, 1.9416474321969162, 0.011862258641844429, 491, 1500, True, 'adagrad', 0.002035213434936248, 1.9325520157724224e-05, 0.07021396899104144, 65, 4.62890763449493, 0.14695367520964567, 0.8258325456667432, 0.5263427689063961, 2.322560366380278], [5, 84, 'cosine', True, 2.0, 0.0, 2.0, 800, 792, 'tversky', True, 0.9596972003265263, 2.0, 0.0, 5, 72, 'jaccard', False, 2.0, 0.0, 0.0, 1000, 1500, True, 'adagrad', 0.01, 0.000626584262013141, 0.0031291921037313376, 1000, 5.0, 4.235131614627185, 5.0, 0.0, 0.0], [430, 226, 'asymmetric', True, 0.6645403211063646, 1.5600849773228038, 1.3095419491748754, 726, 319, 'jaccard', True, 0.4874269753488928, 0.7028623389098291, 0.42822756281935825, 15, 208, 'jaccard', True, 0.018745128320538654, 0.4822970505356333, 1.4090097619363668, 255, 1500, False, 'sgd', 0.008264905370510297, 1.278882200600703e-05, 0.06313145915364855, 885, 4.638100493824505, 1.9332914830030528, 0.04260999926407883, 1.1741607754126957, 4.414745509946822], [241, 0, 'jaccard', False, 2.0, 0.0, 2.0, 5, 1000, 'tversky', False, 0.0, 2.0, 0.0, 5, 0, 'tversky', False, 0.3097533702777626, 2.0, 0.0, 1000, 1500, False, 'adagrad', 0.000395061364448864, 1e-05, 0.0001, 1000, 5.0, 5.0, 5.0, 0.0, 5.0], [800, 0, 'cosine', True, 0.0, 0.0, 2.0, 800, 0, 'cosine', True, 0.0, 1.393143419521643, 0.0, 747, 0, 'cosine', False, 2.0, 0.3568421550460165, 0.0, 206, 1500, True, 'adagrad', 0.01, 0.01, 0.0001, 1000, 1.3521967216828603, 2.097022531862706, 0.0, 1.948759632070367, 0.0], [93, 579, 'tversky', False, 0.06439122366691043, 1.2067964828312239, 0.5044201350754388, 431, 956, 'dice', True, 1.8156186527376226, 0.8165762838303685, 0.09156570419385403, 268, 339, 'tversky', False, 1.5382906462417498, 0.06836169542198257, 0.8000956188299431, 60, 1500, False, 'adagrad', 0.0025564578198816017, 6.036455839039193e-05, 0.003175520715199281, 35, 3.0945129979459587, 0.9799131541860286, 2.3687013439455913, 3.4633551855912255, 0.09749054912831846], [516, 398, 'cosine', True, 1.7695519973634046, 0.11898782708417247, 0.13020303510495815, 579, 827, 'dice', True, 0.4652652181322233, 0.11338325233234572, 1.4605656885241651, 9, 602, 'dice', False, 1.8840200086076737, 0.18599084024809745, 0.7521474785598254, 78, 1500, False, 'adagrad', 1.803246385751043e-05, 0.006133860033453605, 0.00026356211593479026, 737, 4.666901131500966, 1.5411739408102823, 3.4249453107223884, 4.5220858945433084, 0.06239322390662495], [97, 603, 'jaccard', True, 0.0277100002214914, 0.9714465486092247, 0.036589797779775786, 127, 728, 'cosine', False, 0.9994482153859179, 0.35902073309391574, 0.386582630022534, 7, 953, 'jaccard', False, 1.8186107464694499, 1.2571457076280295, 1.1955551071957986, 527, 1500, True, 'adam', 8.77822687874885e-05, 2.294306770417467e-05, 0.019503372983810073, 136, 2.563550680497653, 1.4874316914076167, 4.728382532127945, 4.804816546034568, 0.7474017550962565], [108, 25, 'asymmetric', False, 1.8860870778541083, 0.6259168299365209, 0.09271639716735704, 623, 92, 'dice', True, 0.03605769723087838, 1.832261408207046, 0.022276409576860837, 238, 828, 'tversky', True, 1.8968011473261102, 1.073764202205384, 0.6789577328022828, 79, 1500, True, 'adam', 1.39167896564086e-05, 0.007782985069471341, 0.007727556020656485, 864, 3.277109932149211, 0.08538104081497079, 2.9807213503639436, 4.685074102868414, 0.5004138034844664], [97, 377, 'cosine', True, 1.7772869699601523, 1.2446505957691913, 1.908018257437109, 320, 849, 'cosine', True, 0.5147497146806997, 1.9314506450380888, 0.7240076555717035, 165, 946, 'cosine', False, 1.9340345824898302, 0.06464992740713084, 0.8536310468661348, 854, 1500, False, 'adagrad', 0.0027576109106765773, 5.6439008729754596e-05, 0.0006123667137569416, 992, 1.4223281041986566, 3.533773235484472, 1.746628425120844, 1.7350720843193699, 0.17495666409621805], [19, 788, 'cosine', True, 1.890209206646487, 0.8307215351137462, 0.4859816930022537, 742, 191, 'cosine', False, 0.32693210481697804, 0.7978531871716432, 0.14942648611816403, 595, 667, 'tversky', True, 0.06082636509331919, 1.455903637938264, 1.0366469500158553, 476, 1500, False, 'adagrad', 5.2907143535957514e-05, 2.0969205757861665e-05, 0.026974292111098735, 266, 0.5274022493725001, 4.775272165786818, 1.2596973888216103, 4.942876132002611, 0.27324640568662967]]
